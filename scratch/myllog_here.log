2024-01-24 21:49:06 Debug: Setting integrator to cvode
2024-01-24 21:49:06 Debug: Creating new integrator for cvode
2024-01-24 21:49:06 Information: creating CVODEIntegrator
2024-01-24 21:49:06 Debug: Setting steady state solver to nleq2
2024-01-24 21:49:06 Debug: Creating new steady state solver for nleq2
2024-01-24 21:49:06 Debug: Setting Sensitivity solver to forward
2024-01-24 21:49:06 Debug: Creating new sensitivity solver for forward
2024-01-24 21:49:06 Debug: no cached model found for b7cd732b1903ccffc732ff881ad2a295, creating new one
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_lognormal_four"; fn type: true; at addr: 0x7fd36d48a660
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_laplace_four"; fn type: true; at addr: 0x7fd36d48e9b0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_poisson"; fn type: true; at addr: 0x7fd36d48bde0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_lognormal"; fn type: true; at addr: 0x7fd36d48aa50
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_gamma"; fn type: true; at addr: 0x7fd36d48b660
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_cauchy"; fn type: true; at addr: 0x7fd36d48ae20
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_binomial"; fn type: true; at addr: 0x7fd36d48f440
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_uniform"; fn type: true; at addr: 0x7fd36d48c9e0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_chisquare_three"; fn type: true; at addr: 0x7fd36d48b250
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_normal"; fn type: true; at addr: 0x7fd36d48a190
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_exponential"; fn type: true; at addr: 0x7fd36d48c4f0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_laplace_one"; fn type: true; at addr: 0x7fd36d48d3a0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_chisquare"; fn type: true; at addr: 0x7fd36d48b0f0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_cauchy_one"; fn type: true; at addr: 0x7fd36d48ab80
2024-01-24 21:49:06 Debug: Creating function "rr_max"; fn type: true; at addr: 0x7fd36d4d98c0
2024-01-24 21:49:06 Debug: Creating function "arctanh"; fn type: true; at addr: 0x7fd36d4d9840
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_bernoulli"; fn type: true; at addr: 0x7fd36d48c280
2024-01-24 21:49:06 Debug: Creating function "rr_min"; fn type: true; at addr: 0x7fd36d4d98d0
2024-01-24 21:49:06 Debug: Creating function "arccosh"; fn type: true; at addr: 0x7fd36d4d97f0
2024-01-24 21:49:06 Debug: Creating function "sech"; fn type: true; at addr: 0x7fd36d4d9560
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_binomial_four"; fn type: true; at addr: 0x7fd36d48fa90
2024-01-24 21:49:06 Debug: Creating function "rr_rootd"; fn type: true; at addr: 0x7fd36d4d9410
2024-01-24 21:49:06 Debug: Creating function "arcsinh"; fn type: true; at addr: 0x7fd36d4d97a0
2024-01-24 21:49:06 Debug: Creating function "rr_logd"; fn type: true; at addr: 0x7fd36d4d92b0
2024-01-24 21:49:06 Debug: Creating function "rr_factoriald"; fn type: true; at addr: 0x7fd36d4d92f0
2024-01-24 21:49:06 Debug: Creating function "rr_factoriali"; fn type: true; at addr: 0x7fd36d4d93f0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_laplace"; fn type: true; at addr: 0x7fd36d48d7d0
2024-01-24 21:49:06 Debug: Creating function "csch"; fn type: true; at addr: 0x7fd36d4d9680
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_rayleigh_three"; fn type: true; at addr: 0x7fd36d48e2e0
2024-01-24 21:49:06 Debug: Creating function "csc"; fn type: true; at addr: 0x7fd36d4d9520
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_rayleigh"; fn type: true; at addr: 0x7fd36d48c760
2024-01-24 21:49:06 Debug: Creating function "coth"; fn type: true; at addr: 0x7fd36d4d9700
2024-01-24 21:49:06 Debug: Creating function "sec"; fn type: true; at addr: 0x7fd36d4d9450
2024-01-24 21:49:06 Debug: Creating function "cot"; fn type: true; at addr: 0x7fd36d4d9470
2024-01-24 21:49:06 Debug: Creating function "arcsech"; fn type: true; at addr: 0x7fd36d4d95e0
2024-01-24 21:49:06 Debug: Creating function "arcsec"; fn type: true; at addr: 0x7fd36d4d9500
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_exponential_three"; fn type: true; at addr: 0x7fd36d48dc40
2024-01-24 21:49:06 Debug: Creating function "arccsch"; fn type: true; at addr: 0x7fd36d4d96a0
2024-01-24 21:49:06 Debug: Creating function "arccsc"; fn type: true; at addr: 0x7fd36d4d9540
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_cauchy_four"; fn type: true; at addr: 0x7fd36d48cc80
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_normal_four"; fn type: true; at addr: 0x7fd36d48a2b0
2024-01-24 21:49:06 Debug: Creating function "arccoth"; fn type: true; at addr: 0x7fd36d4d9740
2024-01-24 21:49:06 Debug: Creating function "rr_arccot_negzero"; fn type: true; at addr: 0x7fd36d4d94c0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_gamma_four"; fn type: true; at addr: 0x7fd36d48b7f0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_poisson_three"; fn type: true; at addr: 0x7fd36d48bee0
2024-01-24 21:49:06 Debug: Creating function "quotient"; fn type: true; at addr: 0x7fd36d4d98a0
2024-01-24 21:49:06 Debug: Creating function "arccot"; fn type: true; at addr: 0x7fd36d4d9490
2024-01-24 21:49:06 Information: Using LLVM symbol/value cache
2024-01-24 21:49:06 Debug: found 8 independent and 0 dependent floating species.
floating species [0] = 'MKKK'
floating species [1] = 'MKKK_P'
floating species [2] = 'MKK'
floating species [3] = 'MKK_P'
floating species [4] = 'MKK_PP'
floating species [5] = 'MAPK'
floating species [6] = 'MAPK_P'
floating species [7] = 'MAPK_PP'
found 8 independent and 0 dependent initial floating species.

2024-01-24 21:49:06 Debug: found 1 independent and 0 dependent compartments.
compartment [0] = 'uVol'

2024-01-24 21:49:06 Debug: found 0 independent and 0 dependent boundary species.
found 0 independent and 0 dependent initial boundary species.

2024-01-24 21:49:06 Debug: found 0 independent and 0 dependent global parameters.

2024-01-24 21:49:06 Trace: processing species MKKK

2024-01-24 21:49:06 Trace: processing species MKKK_P

2024-01-24 21:49:06 Trace: processing species MKK

2024-01-24 21:49:06 Trace: processing species MKK_P

2024-01-24 21:49:06 Trace: processing species MKK_PP

2024-01-24 21:49:06 Trace: processing species MAPK

2024-01-24 21:49:06 Trace: processing species MAPK_P

2024-01-24 21:49:06 Trace: processing species MAPK_PP

2024-01-24 21:49:06 Debug: boundarySpecies: 

2024-01-24 21:49:06 Debug: reactions: 
2024-01-24 21:49:06 Debug: J0, 
2024-01-24 21:49:06 Debug: J1, 
2024-01-24 21:49:06 Debug: J2, 
2024-01-24 21:49:06 Debug: J3, 
2024-01-24 21:49:06 Debug: J4, 
2024-01-24 21:49:06 Debug: J5, 
2024-01-24 21:49:06 Debug: J6, 
2024-01-24 21:49:06 Debug: J7, 
2024-01-24 21:49:06 Debug: J8, 
2024-01-24 21:49:06 Debug: J9, 
2024-01-24 21:49:06 Debug: 

2024-01-24 21:49:06 Trace: 	{0, 0}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{0, 0} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{1, 0}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{1, 0} : 0 + 1

2024-01-24 21:49:06 Trace: 	{1, 1}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{1, 1} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{0, 1}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{0, 1} : 0 + 1

2024-01-24 21:49:06 Trace: 	{2, 2}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{2, 2} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{3, 2}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{3, 2} : 0 + 1

2024-01-24 21:49:06 Trace: 	{3, 3}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{3, 3} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{4, 3}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{4, 3} : 0 + 1

2024-01-24 21:49:06 Trace: 	{4, 4}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{4, 4} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{3, 4}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{3, 4} : 0 + 1

2024-01-24 21:49:06 Trace: 	{3, 5}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{3, 5} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{2, 5}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{2, 5} : 0 + 1

2024-01-24 21:49:06 Trace: 	{5, 6}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{5, 6} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{6, 6}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{6, 6} : 0 + 1

2024-01-24 21:49:06 Trace: 	{6, 7}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{6, 7} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{7, 7}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{7, 7} : 0 + 1

2024-01-24 21:49:06 Trace: 	{7, 8}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{7, 8} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{6, 8}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{6, 8} : 0 + 1

2024-01-24 21:49:06 Trace: 	{6, 9}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{6, 9} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{5, 9}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{5, 9} : 0 + 1

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define void @evalInitialConditions(%rr_LLVMModelData* %modelData, i32 %flags) {
entry:
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  store double 9.000000e+01, double* %MKKK_gep, align 8
  %FloatingSpeciesAmountsAlias_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load2 = load double*, double** %FloatingSpeciesAmountsAlias_gep1, align 8
  %MKKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load2, i32 1
  store double 1.000000e+01, double* %MKKK_P_gep, align 8
  %FloatingSpeciesAmountsAlias_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load4 = load double*, double** %FloatingSpeciesAmountsAlias_gep3, align 8
  %MKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load4, i32 2
  store double 2.800000e+02, double* %MKK_gep, align 8
  %FloatingSpeciesAmountsAlias_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load6 = load double*, double** %FloatingSpeciesAmountsAlias_gep5, align 8
  %MKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load6, i32 3
  store double 1.000000e+01, double* %MKK_P_gep, align 8
  %FloatingSpeciesAmountsAlias_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load8 = load double*, double** %FloatingSpeciesAmountsAlias_gep7, align 8
  %MKK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load8, i32 4
  store double 1.000000e+01, double* %MKK_PP_gep, align 8
  %FloatingSpeciesAmountsAlias_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load10 = load double*, double** %FloatingSpeciesAmountsAlias_gep9, align 8
  %MAPK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load10, i32 5
  store double 2.800000e+02, double* %MAPK_gep, align 8
  %FloatingSpeciesAmountsAlias_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load12 = load double*, double** %FloatingSpeciesAmountsAlias_gep11, align 8
  %MAPK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load12, i32 6
  store double 1.000000e+01, double* %MAPK_P_gep, align 8
  %FloatingSpeciesAmountsAlias_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load14 = load double*, double** %FloatingSpeciesAmountsAlias_gep13, align 8
  %MAPK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load14, i32 7
  store double 1.000000e+01, double* %MAPK_PP_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  store double 1.000000e+00, double* %uVol_gep, align 8
  %Stoichiometry_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 13
  %stoichiometry = load %rr_csr_matrix*, %rr_csr_matrix** %Stoichiometry_gep, align 8
  %0 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 0, i32 0, double -1.000000e+00)
  %1 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 1, i32 0, double 1.000000e+00)
  %2 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 1, i32 1, double -1.000000e+00)
  %3 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 0, i32 1, double 1.000000e+00)
  %4 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 2, i32 2, double -1.000000e+00)
  %5 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 3, i32 2, double 1.000000e+00)
  %6 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 3, i32 3, double -1.000000e+00)
  %7 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 4, i32 3, double 1.000000e+00)
  %8 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 4, i32 4, double -1.000000e+00)
  %9 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 3, i32 4, double 1.000000e+00)
  %10 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 3, i32 5, double -1.000000e+00)
  %11 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 2, i32 5, double 1.000000e+00)
  %12 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 5, i32 6, double -1.000000e+00)
  %13 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 6, i32 6, double 1.000000e+00)
  %14 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 6, i32 7, double -1.000000e+00)
  %15 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 7, i32 7, double 1.000000e+00)
  %16 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 7, i32 8, double -1.000000e+00)
  %17 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 6, i32 8, double 1.000000e+00)
  %18 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 6, i32 9, double -1.000000e+00)
  %19 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 5, i32 9, double 1.000000e+00)
  %FloatingSpeciesAmountsAlias_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load16 = load double*, double** %FloatingSpeciesAmountsAlias_gep15, align 8
  %MKKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load16, i32 0
  %MKKK_amt = load double, double* %MKKK_amt_gep_gep, align 8
  %uVol_gep17 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep17, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %uVol
  %MKKK_amt18 = fmul double %MKKK_conc, 1.000000e+00
  %MKKK_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  store double %MKKK_amt18, double* %MKKK_gep19, align 8
  %FloatingSpeciesAmountsAlias_gep20 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load21 = load double*, double** %FloatingSpeciesAmountsAlias_gep20, align 8
  %MKKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load21, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_amt_gep_gep, align 8
  %uVol_gep22 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol23 = load double, double* %uVol_gep22, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %uVol23
  %MKKK_P_amt24 = fmul double %MKKK_P_conc, 1.000000e+00
  %MKKK_P_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  store double %MKKK_P_amt24, double* %MKKK_P_gep25, align 8
  %FloatingSpeciesAmountsAlias_gep26 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load27 = load double*, double** %FloatingSpeciesAmountsAlias_gep26, align 8
  %MKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load27, i32 2
  %MKK_amt = load double, double* %MKK_amt_gep_gep, align 8
  %uVol_gep28 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol29 = load double, double* %uVol_gep28, align 8
  %MKK_conc = fdiv double %MKK_amt, %uVol29
  %MKK_amt30 = fmul double %MKK_conc, 1.000000e+00
  %MKK_gep31 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  store double %MKK_amt30, double* %MKK_gep31, align 8
  %FloatingSpeciesAmountsAlias_gep32 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load33 = load double*, double** %FloatingSpeciesAmountsAlias_gep32, align 8
  %MKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load33, i32 3
  %MKK_P_amt = load double, double* %MKK_P_amt_gep_gep, align 8
  %uVol_gep34 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol35 = load double, double* %uVol_gep34, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %uVol35
  %MKK_P_amt36 = fmul double %MKK_P_conc, 1.000000e+00
  %MKK_P_gep37 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  store double %MKK_P_amt36, double* %MKK_P_gep37, align 8
  %FloatingSpeciesAmountsAlias_gep38 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load39 = load double*, double** %FloatingSpeciesAmountsAlias_gep38, align 8
  %MKK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load39, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_amt_gep_gep, align 8
  %uVol_gep40 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol41 = load double, double* %uVol_gep40, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %uVol41
  %MKK_PP_amt42 = fmul double %MKK_PP_conc, 1.000000e+00
  %MKK_PP_gep43 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  store double %MKK_PP_amt42, double* %MKK_PP_gep43, align 8
  %FloatingSpeciesAmountsAlias_gep44 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load45 = load double*, double** %FloatingSpeciesAmountsAlias_gep44, align 8
  %MAPK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load45, i32 5
  %MAPK_amt = load double, double* %MAPK_amt_gep_gep, align 8
  %uVol_gep46 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol47 = load double, double* %uVol_gep46, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %uVol47
  %MAPK_amt48 = fmul double %MAPK_conc, 1.000000e+00
  %MAPK_gep49 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  store double %MAPK_amt48, double* %MAPK_gep49, align 8
  %FloatingSpeciesAmountsAlias_gep50 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load51 = load double*, double** %FloatingSpeciesAmountsAlias_gep50, align 8
  %MAPK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load51, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_amt_gep_gep, align 8
  %uVol_gep52 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol53 = load double, double* %uVol_gep52, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %uVol53
  %MAPK_P_amt54 = fmul double %MAPK_P_conc, 1.000000e+00
  %MAPK_P_gep55 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  store double %MAPK_P_amt54, double* %MAPK_P_gep55, align 8
  %FloatingSpeciesAmountsAlias_gep56 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load57 = load double*, double** %FloatingSpeciesAmountsAlias_gep56, align 8
  %MAPK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load57, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_amt_gep_gep, align 8
  %uVol_gep58 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol59 = load double, double* %uVol_gep58, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %uVol59
  %MAPK_PP_amt60 = fmul double %MAPK_PP_conc, 1.000000e+00
  %MAPK_PP_gep61 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  store double %MAPK_PP_amt60, double* %MAPK_PP_gep61, align 8
  %uVol_gep62 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol63 = load double, double* %uVol_gep62, align 8
  %uVol_gep64 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  store double %uVol63, double* %uVol_gep64, align 8
  ret void
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J0 found local parameter for symbol V1, value: 2.5
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: reaction id J0 found local parameter for symbol Ki, value: 9
2024-01-24 21:49:06 Debug: reaction id J0 found local parameter for symbol n, value: 1
2024-01-24 21:49:06 Debug: reaction id J0 found local parameter for symbol K1, value: 10
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J1 found local parameter for symbol V2, value: 0.25
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: reaction id J1 found local parameter for symbol KK2, value: 8
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J2 found local parameter for symbol k3, value: 0.025
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: reaction id J2 found local parameter for symbol KK3, value: 15
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J3 found local parameter for symbol k4, value: 0.025
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: reaction id J3 found local parameter for symbol KK4, value: 15
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J4 found local parameter for symbol V5, value: 0.75
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: reaction id J4 found local parameter for symbol KK5, value: 15
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J5 found local parameter for symbol V6, value: 0.75
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: reaction id J5 found local parameter for symbol KK6, value: 15
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J6 found local parameter for symbol k7, value: 0.025
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: reaction id J6 found local parameter for symbol KK7, value: 15
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J7 found local parameter for symbol k8, value: 0.025
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: reaction id J7 found local parameter for symbol KK8, value: 15
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J8 found local parameter for symbol V9, value: 0.5
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: reaction id J8 found local parameter for symbol KK9, value: 15
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: reaction id J9 found local parameter for symbol V10, value: 0.5
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: reaction id J9 found local parameter for symbol KK10, value: 15
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Information: function: define double @evalReactionRates(%rr_LLVMModelData* %modelData) {
entry:
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %multmp = fmul double %uVol, 2.500000e+00
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  %MKKK_amt = load double, double* %MKKK_amt_gep_gep, align 8
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol2 = load double, double* %uVol_gep1, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %uVol2
  %multmp3 = fmul double %multmp, %MKKK_conc
  %FloatingSpeciesAmountsAlias_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load5 = load double*, double** %FloatingSpeciesAmountsAlias_gep4, align 8
  %MAPK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load5, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_amt_gep_gep, align 8
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol7 = load double, double* %uVol_gep6, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %uVol7
  %divtmp = fdiv double %MAPK_PP_conc, 9.000000e+00
  %calltmp = call double @pow(double %divtmp, double 1.000000e+00)
  %addtmp = fadd double 1.000000e+00, %calltmp
  %FloatingSpeciesAmountsAlias_gep8 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load9 = load double*, double** %FloatingSpeciesAmountsAlias_gep8, align 8
  %MKKK_amt_gep_gep10 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load9, i32 0
  %MKKK_amt11 = load double, double* %MKKK_amt_gep_gep10, align 8
  %uVol_gep12 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol13 = load double, double* %uVol_gep12, align 8
  %MKKK_conc14 = fdiv double %MKKK_amt11, %uVol13
  %addtmp15 = fadd double 1.000000e+01, %MKKK_conc14
  %multmp16 = fmul double %addtmp, %addtmp15
  %divtmp17 = fdiv double %multmp3, %multmp16
  %J0_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 0
  store double %divtmp17, double* %J0_gep, align 8
  %uVol_gep18 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol19 = load double, double* %uVol_gep18, align 8
  %multmp20 = fmul double %uVol19, 2.500000e-01
  %FloatingSpeciesAmountsAlias_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load22 = load double*, double** %FloatingSpeciesAmountsAlias_gep21, align 8
  %MKKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load22, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_amt_gep_gep, align 8
  %uVol_gep23 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol24 = load double, double* %uVol_gep23, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %uVol24
  %multmp25 = fmul double %multmp20, %MKKK_P_conc
  %FloatingSpeciesAmountsAlias_gep26 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load27 = load double*, double** %FloatingSpeciesAmountsAlias_gep26, align 8
  %MKKK_P_amt_gep_gep28 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load27, i32 1
  %MKKK_P_amt29 = load double, double* %MKKK_P_amt_gep_gep28, align 8
  %uVol_gep30 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol31 = load double, double* %uVol_gep30, align 8
  %MKKK_P_conc32 = fdiv double %MKKK_P_amt29, %uVol31
  %addtmp33 = fadd double 8.000000e+00, %MKKK_P_conc32
  %divtmp34 = fdiv double %multmp25, %addtmp33
  %J1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 1
  store double %divtmp34, double* %J1_gep, align 8
  %uVol_gep35 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol36 = load double, double* %uVol_gep35, align 8
  %multmp37 = fmul double %uVol36, 2.500000e-02
  %FloatingSpeciesAmountsAlias_gep38 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load39 = load double*, double** %FloatingSpeciesAmountsAlias_gep38, align 8
  %MKKK_P_amt_gep_gep40 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load39, i32 1
  %MKKK_P_amt41 = load double, double* %MKKK_P_amt_gep_gep40, align 8
  %uVol_gep42 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol43 = load double, double* %uVol_gep42, align 8
  %MKKK_P_conc44 = fdiv double %MKKK_P_amt41, %uVol43
  %multmp45 = fmul double %multmp37, %MKKK_P_conc44
  %FloatingSpeciesAmountsAlias_gep46 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load47 = load double*, double** %FloatingSpeciesAmountsAlias_gep46, align 8
  %MKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load47, i32 2
  %MKK_amt = load double, double* %MKK_amt_gep_gep, align 8
  %uVol_gep48 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol49 = load double, double* %uVol_gep48, align 8
  %MKK_conc = fdiv double %MKK_amt, %uVol49
  %multmp50 = fmul double %multmp45, %MKK_conc
  %FloatingSpeciesAmountsAlias_gep51 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load52 = load double*, double** %FloatingSpeciesAmountsAlias_gep51, align 8
  %MKK_amt_gep_gep53 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load52, i32 2
  %MKK_amt54 = load double, double* %MKK_amt_gep_gep53, align 8
  %uVol_gep55 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol56 = load double, double* %uVol_gep55, align 8
  %MKK_conc57 = fdiv double %MKK_amt54, %uVol56
  %addtmp58 = fadd double 1.500000e+01, %MKK_conc57
  %divtmp59 = fdiv double %multmp50, %addtmp58
  %J2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 2
  store double %divtmp59, double* %J2_gep, align 8
  %uVol_gep60 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol61 = load double, double* %uVol_gep60, align 8
  %multmp62 = fmul double %uVol61, 2.500000e-02
  %FloatingSpeciesAmountsAlias_gep63 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load64 = load double*, double** %FloatingSpeciesAmountsAlias_gep63, align 8
  %MKKK_P_amt_gep_gep65 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load64, i32 1
  %MKKK_P_amt66 = load double, double* %MKKK_P_amt_gep_gep65, align 8
  %uVol_gep67 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol68 = load double, double* %uVol_gep67, align 8
  %MKKK_P_conc69 = fdiv double %MKKK_P_amt66, %uVol68
  %multmp70 = fmul double %multmp62, %MKKK_P_conc69
  %FloatingSpeciesAmountsAlias_gep71 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load72 = load double*, double** %FloatingSpeciesAmountsAlias_gep71, align 8
  %MKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load72, i32 3
  %MKK_P_amt = load double, double* %MKK_P_amt_gep_gep, align 8
  %uVol_gep73 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol74 = load double, double* %uVol_gep73, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %uVol74
  %multmp75 = fmul double %multmp70, %MKK_P_conc
  %FloatingSpeciesAmountsAlias_gep76 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load77 = load double*, double** %FloatingSpeciesAmountsAlias_gep76, align 8
  %MKK_P_amt_gep_gep78 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load77, i32 3
  %MKK_P_amt79 = load double, double* %MKK_P_amt_gep_gep78, align 8
  %uVol_gep80 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol81 = load double, double* %uVol_gep80, align 8
  %MKK_P_conc82 = fdiv double %MKK_P_amt79, %uVol81
  %addtmp83 = fadd double 1.500000e+01, %MKK_P_conc82
  %divtmp84 = fdiv double %multmp75, %addtmp83
  %J3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 3
  store double %divtmp84, double* %J3_gep, align 8
  %uVol_gep85 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol86 = load double, double* %uVol_gep85, align 8
  %multmp87 = fmul double %uVol86, 7.500000e-01
  %FloatingSpeciesAmountsAlias_gep88 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load89 = load double*, double** %FloatingSpeciesAmountsAlias_gep88, align 8
  %MKK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load89, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_amt_gep_gep, align 8
  %uVol_gep90 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol91 = load double, double* %uVol_gep90, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %uVol91
  %multmp92 = fmul double %multmp87, %MKK_PP_conc
  %FloatingSpeciesAmountsAlias_gep93 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load94 = load double*, double** %FloatingSpeciesAmountsAlias_gep93, align 8
  %MKK_PP_amt_gep_gep95 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load94, i32 4
  %MKK_PP_amt96 = load double, double* %MKK_PP_amt_gep_gep95, align 8
  %uVol_gep97 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol98 = load double, double* %uVol_gep97, align 8
  %MKK_PP_conc99 = fdiv double %MKK_PP_amt96, %uVol98
  %addtmp100 = fadd double 1.500000e+01, %MKK_PP_conc99
  %divtmp101 = fdiv double %multmp92, %addtmp100
  %J4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 4
  store double %divtmp101, double* %J4_gep, align 8
  %uVol_gep102 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol103 = load double, double* %uVol_gep102, align 8
  %multmp104 = fmul double %uVol103, 7.500000e-01
  %FloatingSpeciesAmountsAlias_gep105 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load106 = load double*, double** %FloatingSpeciesAmountsAlias_gep105, align 8
  %MKK_P_amt_gep_gep107 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load106, i32 3
  %MKK_P_amt108 = load double, double* %MKK_P_amt_gep_gep107, align 8
  %uVol_gep109 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol110 = load double, double* %uVol_gep109, align 8
  %MKK_P_conc111 = fdiv double %MKK_P_amt108, %uVol110
  %multmp112 = fmul double %multmp104, %MKK_P_conc111
  %FloatingSpeciesAmountsAlias_gep113 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load114 = load double*, double** %FloatingSpeciesAmountsAlias_gep113, align 8
  %MKK_P_amt_gep_gep115 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load114, i32 3
  %MKK_P_amt116 = load double, double* %MKK_P_amt_gep_gep115, align 8
  %uVol_gep117 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol118 = load double, double* %uVol_gep117, align 8
  %MKK_P_conc119 = fdiv double %MKK_P_amt116, %uVol118
  %addtmp120 = fadd double 1.500000e+01, %MKK_P_conc119
  %divtmp121 = fdiv double %multmp112, %addtmp120
  %J5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 5
  store double %divtmp121, double* %J5_gep, align 8
  %uVol_gep122 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol123 = load double, double* %uVol_gep122, align 8
  %multmp124 = fmul double %uVol123, 2.500000e-02
  %FloatingSpeciesAmountsAlias_gep125 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load126 = load double*, double** %FloatingSpeciesAmountsAlias_gep125, align 8
  %MKK_PP_amt_gep_gep127 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load126, i32 4
  %MKK_PP_amt128 = load double, double* %MKK_PP_amt_gep_gep127, align 8
  %uVol_gep129 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol130 = load double, double* %uVol_gep129, align 8
  %MKK_PP_conc131 = fdiv double %MKK_PP_amt128, %uVol130
  %multmp132 = fmul double %multmp124, %MKK_PP_conc131
  %FloatingSpeciesAmountsAlias_gep133 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load134 = load double*, double** %FloatingSpeciesAmountsAlias_gep133, align 8
  %MAPK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load134, i32 5
  %MAPK_amt = load double, double* %MAPK_amt_gep_gep, align 8
  %uVol_gep135 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol136 = load double, double* %uVol_gep135, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %uVol136
  %multmp137 = fmul double %multmp132, %MAPK_conc
  %FloatingSpeciesAmountsAlias_gep138 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load139 = load double*, double** %FloatingSpeciesAmountsAlias_gep138, align 8
  %MAPK_amt_gep_gep140 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load139, i32 5
  %MAPK_amt141 = load double, double* %MAPK_amt_gep_gep140, align 8
  %uVol_gep142 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol143 = load double, double* %uVol_gep142, align 8
  %MAPK_conc144 = fdiv double %MAPK_amt141, %uVol143
  %addtmp145 = fadd double 1.500000e+01, %MAPK_conc144
  %divtmp146 = fdiv double %multmp137, %addtmp145
  %J6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 6
  store double %divtmp146, double* %J6_gep, align 8
  %uVol_gep147 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol148 = load double, double* %uVol_gep147, align 8
  %multmp149 = fmul double %uVol148, 2.500000e-02
  %FloatingSpeciesAmountsAlias_gep150 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load151 = load double*, double** %FloatingSpeciesAmountsAlias_gep150, align 8
  %MKK_PP_amt_gep_gep152 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load151, i32 4
  %MKK_PP_amt153 = load double, double* %MKK_PP_amt_gep_gep152, align 8
  %uVol_gep154 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol155 = load double, double* %uVol_gep154, align 8
  %MKK_PP_conc156 = fdiv double %MKK_PP_amt153, %uVol155
  %multmp157 = fmul double %multmp149, %MKK_PP_conc156
  %FloatingSpeciesAmountsAlias_gep158 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load159 = load double*, double** %FloatingSpeciesAmountsAlias_gep158, align 8
  %MAPK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load159, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_amt_gep_gep, align 8
  %uVol_gep160 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol161 = load double, double* %uVol_gep160, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %uVol161
  %multmp162 = fmul double %multmp157, %MAPK_P_conc
  %FloatingSpeciesAmountsAlias_gep163 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load164 = load double*, double** %FloatingSpeciesAmountsAlias_gep163, align 8
  %MAPK_P_amt_gep_gep165 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load164, i32 6
  %MAPK_P_amt166 = load double, double* %MAPK_P_amt_gep_gep165, align 8
  %uVol_gep167 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol168 = load double, double* %uVol_gep167, align 8
  %MAPK_P_conc169 = fdiv double %MAPK_P_amt166, %uVol168
  %addtmp170 = fadd double 1.500000e+01, %MAPK_P_conc169
  %divtmp171 = fdiv double %multmp162, %addtmp170
  %J7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 7
  store double %divtmp171, double* %J7_gep, align 8
  %uVol_gep172 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol173 = load double, double* %uVol_gep172, align 8
  %multmp174 = fmul double %uVol173, 5.000000e-01
  %FloatingSpeciesAmountsAlias_gep175 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load176 = load double*, double** %FloatingSpeciesAmountsAlias_gep175, align 8
  %MAPK_PP_amt_gep_gep177 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load176, i32 7
  %MAPK_PP_amt178 = load double, double* %MAPK_PP_amt_gep_gep177, align 8
  %uVol_gep179 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol180 = load double, double* %uVol_gep179, align 8
  %MAPK_PP_conc181 = fdiv double %MAPK_PP_amt178, %uVol180
  %multmp182 = fmul double %multmp174, %MAPK_PP_conc181
  %FloatingSpeciesAmountsAlias_gep183 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load184 = load double*, double** %FloatingSpeciesAmountsAlias_gep183, align 8
  %MAPK_PP_amt_gep_gep185 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load184, i32 7
  %MAPK_PP_amt186 = load double, double* %MAPK_PP_amt_gep_gep185, align 8
  %uVol_gep187 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol188 = load double, double* %uVol_gep187, align 8
  %MAPK_PP_conc189 = fdiv double %MAPK_PP_amt186, %uVol188
  %addtmp190 = fadd double 1.500000e+01, %MAPK_PP_conc189
  %divtmp191 = fdiv double %multmp182, %addtmp190
  %J8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 8
  store double %divtmp191, double* %J8_gep, align 8
  %uVol_gep192 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol193 = load double, double* %uVol_gep192, align 8
  %multmp194 = fmul double %uVol193, 5.000000e-01
  %FloatingSpeciesAmountsAlias_gep195 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load196 = load double*, double** %FloatingSpeciesAmountsAlias_gep195, align 8
  %MAPK_P_amt_gep_gep197 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load196, i32 6
  %MAPK_P_amt198 = load double, double* %MAPK_P_amt_gep_gep197, align 8
  %uVol_gep199 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol200 = load double, double* %uVol_gep199, align 8
  %MAPK_P_conc201 = fdiv double %MAPK_P_amt198, %uVol200
  %multmp202 = fmul double %multmp194, %MAPK_P_conc201
  %FloatingSpeciesAmountsAlias_gep203 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load204 = load double*, double** %FloatingSpeciesAmountsAlias_gep203, align 8
  %MAPK_P_amt_gep_gep205 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load204, i32 6
  %MAPK_P_amt206 = load double, double* %MAPK_P_amt_gep_gep205, align 8
  %uVol_gep207 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol208 = load double, double* %uVol_gep207, align 8
  %MAPK_P_conc209 = fdiv double %MAPK_P_amt206, %uVol208
  %addtmp210 = fadd double 1.500000e+01, %MAPK_P_conc209
  %divtmp211 = fdiv double %multmp202, %addtmp210
  %J9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 9
  store double %divtmp211, double* %J9_gep, align 8
  ret double 1.000000e+00
}

2024-01-24 21:49:06 Information: function: define double @getBoundarySpeciesAmount(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define double @getFloatingSpeciesAmount(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

MKKK_block:                                       ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  %MKKK_amt = load double, double* %MKKK_amt_gep_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %uVol
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol2 = load double, double* %uVol_gep1, align 8
  %MKKK_amt3 = fmul double %MKKK_conc, %uVol2
  ret double %MKKK_amt3

MKKK_P_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load5 = load double*, double** %FloatingSpeciesAmountsAlias_gep4, align 8
  %MKKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load5, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_amt_gep_gep, align 8
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol7 = load double, double* %uVol_gep6, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %uVol7
  %uVol_gep8 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol9 = load double, double* %uVol_gep8, align 8
  %MKKK_P_amt10 = fmul double %MKKK_P_conc, %uVol9
  ret double %MKKK_P_amt10

MKK_block:                                        ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load12 = load double*, double** %FloatingSpeciesAmountsAlias_gep11, align 8
  %MKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load12, i32 2
  %MKK_amt = load double, double* %MKK_amt_gep_gep, align 8
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol14 = load double, double* %uVol_gep13, align 8
  %MKK_conc = fdiv double %MKK_amt, %uVol14
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol16 = load double, double* %uVol_gep15, align 8
  %MKK_amt17 = fmul double %MKK_conc, %uVol16
  ret double %MKK_amt17

MKK_P_block:                                      ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep18 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load19 = load double*, double** %FloatingSpeciesAmountsAlias_gep18, align 8
  %MKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load19, i32 3
  %MKK_P_amt = load double, double* %MKK_P_amt_gep_gep, align 8
  %uVol_gep20 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol21 = load double, double* %uVol_gep20, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %uVol21
  %uVol_gep22 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol23 = load double, double* %uVol_gep22, align 8
  %MKK_P_amt24 = fmul double %MKK_P_conc, %uVol23
  ret double %MKK_P_amt24

MKK_PP_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load26 = load double*, double** %FloatingSpeciesAmountsAlias_gep25, align 8
  %MKK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load26, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_amt_gep_gep, align 8
  %uVol_gep27 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol28 = load double, double* %uVol_gep27, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %uVol28
  %uVol_gep29 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol30 = load double, double* %uVol_gep29, align 8
  %MKK_PP_amt31 = fmul double %MKK_PP_conc, %uVol30
  ret double %MKK_PP_amt31

MAPK_block:                                       ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep32 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load33 = load double*, double** %FloatingSpeciesAmountsAlias_gep32, align 8
  %MAPK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load33, i32 5
  %MAPK_amt = load double, double* %MAPK_amt_gep_gep, align 8
  %uVol_gep34 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol35 = load double, double* %uVol_gep34, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %uVol35
  %uVol_gep36 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol37 = load double, double* %uVol_gep36, align 8
  %MAPK_amt38 = fmul double %MAPK_conc, %uVol37
  ret double %MAPK_amt38

MAPK_P_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep39 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load40 = load double*, double** %FloatingSpeciesAmountsAlias_gep39, align 8
  %MAPK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load40, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_amt_gep_gep, align 8
  %uVol_gep41 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol42 = load double, double* %uVol_gep41, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %uVol42
  %uVol_gep43 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol44 = load double, double* %uVol_gep43, align 8
  %MAPK_P_amt45 = fmul double %MAPK_P_conc, %uVol44
  ret double %MAPK_P_amt45

MAPK_PP_block:                                    ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep46 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load47 = load double*, double** %FloatingSpeciesAmountsAlias_gep46, align 8
  %MAPK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load47, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_amt_gep_gep, align 8
  %uVol_gep48 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol49 = load double, double* %uVol_gep48, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %uVol49
  %uVol_gep50 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol51 = load double, double* %uVol_gep50, align 8
  %MAPK_PP_amt52 = fmul double %MAPK_PP_conc, %uVol51
  ret double %MAPK_PP_amt52
}

2024-01-24 21:49:06 Information: function: define double @getBoundarySpeciesConcentration(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Information: function: define double @getFloatingSpeciesConcentration(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

MKKK_block:                                       ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  %MKKK_amt = load double, double* %MKKK_amt_gep_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %uVol
  ret double %MKKK_conc

MKKK_P_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load2 = load double*, double** %FloatingSpeciesAmountsAlias_gep1, align 8
  %MKKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load2, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_amt_gep_gep, align 8
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol4 = load double, double* %uVol_gep3, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %uVol4
  ret double %MKKK_P_conc

MKK_block:                                        ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load6 = load double*, double** %FloatingSpeciesAmountsAlias_gep5, align 8
  %MKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load6, i32 2
  %MKK_amt = load double, double* %MKK_amt_gep_gep, align 8
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol8 = load double, double* %uVol_gep7, align 8
  %MKK_conc = fdiv double %MKK_amt, %uVol8
  ret double %MKK_conc

MKK_P_block:                                      ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load10 = load double*, double** %FloatingSpeciesAmountsAlias_gep9, align 8
  %MKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load10, i32 3
  %MKK_P_amt = load double, double* %MKK_P_amt_gep_gep, align 8
  %uVol_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol12 = load double, double* %uVol_gep11, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %uVol12
  ret double %MKK_P_conc

MKK_PP_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load14 = load double*, double** %FloatingSpeciesAmountsAlias_gep13, align 8
  %MKK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load14, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_amt_gep_gep, align 8
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol16 = load double, double* %uVol_gep15, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %uVol16
  ret double %MKK_PP_conc

MAPK_block:                                       ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep17 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load18 = load double*, double** %FloatingSpeciesAmountsAlias_gep17, align 8
  %MAPK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load18, i32 5
  %MAPK_amt = load double, double* %MAPK_amt_gep_gep, align 8
  %uVol_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol20 = load double, double* %uVol_gep19, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %uVol20
  ret double %MAPK_conc

MAPK_P_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load22 = load double*, double** %FloatingSpeciesAmountsAlias_gep21, align 8
  %MAPK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load22, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_amt_gep_gep, align 8
  %uVol_gep23 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol24 = load double, double* %uVol_gep23, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %uVol24
  ret double %MAPK_P_conc

MAPK_PP_block:                                    ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load26 = load double*, double** %FloatingSpeciesAmountsAlias_gep25, align 8
  %MAPK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load26, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_amt_gep_gep, align 8
  %uVol_gep27 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol28 = load double, double* %uVol_gep27, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %uVol28
  ret double %MAPK_PP_conc
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define double @getCompartmentVolume(%rr_LLVMModelData* %modelData, i32 %compartmentIndex) {
entry:
  switch i32 %compartmentIndex, label %default [
    i32 0, label %uVol_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

uVol_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol_value = load double, double* %uVol_gep, align 8
  ret double %uVol_value
}

2024-01-24 21:49:06 Information: function: define double @getGlobalParameter(%rr_LLVMModelData* %modelData, i32 %globalParameterIndex) {
entry:
  switch i32 %globalParameterIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Information: function: define void @evalRateRuleRates(%rr_LLVMModelData* %modelData) {
entry:
  ret void
}

2024-01-24 21:49:06 Information: function: define i8 @getEventTrigger(%rr_LLVMModelData* %modelData, i32 %triggerIndx) {
entry:
  switch i32 %triggerIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 -1
}

2024-01-24 21:49:06 Information: function: define double @getEventPriority(%rr_LLVMModelData* %modelData, i32 %priorityIndx) {
entry:
  switch i32 %priorityIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret double 1.234560e+02
}

2024-01-24 21:49:06 Information: function: define double @getEventDelay(%rr_LLVMModelData* %modelData, i32 %delayIndx) {
entry:
  switch i32 %delayIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret double 1.234560e+02
}

2024-01-24 21:49:06 Information: function: define void @eventTrigger(%rr_LLVMModelData* %modelData, i32 %eventIndx, double* %data) {
entry:
  switch i32 %eventIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret void
}

2024-01-24 21:49:06 Information: function: define void @eventAssign(%rr_LLVMModelData* %modelData, i32 %eventIndx, double* %data) {
entry:
  switch i32 %eventIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret void
}

2024-01-24 21:49:06 Information: function: define void @evalVolatileStoich(%rr_LLVMModelData* %modelData) {
entry:
  ret void
}

2024-01-24 21:49:06 Information: function: define void @evalConversionFactor(%rr_LLVMModelData* %modelData) {
entry:
  ret void
}

2024-01-24 21:49:06 Information: function: define i8 @setBoundarySpeciesAmount(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex, double %value) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Information: function: define i8 @setBoundarySpeciesConcentration(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex, double %value) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define i8 @setFloatingSpeciesConcentration(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex, double %value) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret i8 0

MKKK_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %MKKK_amt = fmul double %value, %uVol
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  store double %MKKK_amt, double* %MKKK_gep, align 8
  ret i8 1

MKKK_P_block:                                     ; preds = %entry
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol2 = load double, double* %uVol_gep1, align 8
  %MKKK_P_amt = fmul double %value, %uVol2
  %FloatingSpeciesAmountsAlias_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load4 = load double*, double** %FloatingSpeciesAmountsAlias_gep3, align 8
  %MKKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load4, i32 1
  store double %MKKK_P_amt, double* %MKKK_P_gep, align 8
  ret i8 1

MKK_block:                                        ; preds = %entry
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol6 = load double, double* %uVol_gep5, align 8
  %MKK_amt = fmul double %value, %uVol6
  %FloatingSpeciesAmountsAlias_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load8 = load double*, double** %FloatingSpeciesAmountsAlias_gep7, align 8
  %MKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load8, i32 2
  store double %MKK_amt, double* %MKK_gep, align 8
  ret i8 1

MKK_P_block:                                      ; preds = %entry
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol10 = load double, double* %uVol_gep9, align 8
  %MKK_P_amt = fmul double %value, %uVol10
  %FloatingSpeciesAmountsAlias_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load12 = load double*, double** %FloatingSpeciesAmountsAlias_gep11, align 8
  %MKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load12, i32 3
  store double %MKK_P_amt, double* %MKK_P_gep, align 8
  ret i8 1

MKK_PP_block:                                     ; preds = %entry
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol14 = load double, double* %uVol_gep13, align 8
  %MKK_PP_amt = fmul double %value, %uVol14
  %FloatingSpeciesAmountsAlias_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load16 = load double*, double** %FloatingSpeciesAmountsAlias_gep15, align 8
  %MKK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load16, i32 4
  store double %MKK_PP_amt, double* %MKK_PP_gep, align 8
  ret i8 1

MAPK_block:                                       ; preds = %entry
  %uVol_gep17 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol18 = load double, double* %uVol_gep17, align 8
  %MAPK_amt = fmul double %value, %uVol18
  %FloatingSpeciesAmountsAlias_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load20 = load double*, double** %FloatingSpeciesAmountsAlias_gep19, align 8
  %MAPK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load20, i32 5
  store double %MAPK_amt, double* %MAPK_gep, align 8
  ret i8 1

MAPK_P_block:                                     ; preds = %entry
  %uVol_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol22 = load double, double* %uVol_gep21, align 8
  %MAPK_P_amt = fmul double %value, %uVol22
  %FloatingSpeciesAmountsAlias_gep23 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load24 = load double*, double** %FloatingSpeciesAmountsAlias_gep23, align 8
  %MAPK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load24, i32 6
  store double %MAPK_P_amt, double* %MAPK_P_gep, align 8
  ret i8 1

MAPK_PP_block:                                    ; preds = %entry
  %uVol_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol26 = load double, double* %uVol_gep25, align 8
  %MAPK_PP_amt = fmul double %value, %uVol26
  %FloatingSpeciesAmountsAlias_gep27 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load28 = load double*, double** %FloatingSpeciesAmountsAlias_gep27, align 8
  %MAPK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load28, i32 7
  store double %MAPK_PP_amt, double* %MAPK_PP_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define i8 @setCompartmentVolume(%rr_LLVMModelData* %modelData, i32 %compartmentIndex, double %value) {
entry:
  switch i32 %compartmentIndex, label %default [
    i32 0, label %uVol_block
  ]

default:                                          ; preds = %entry
  ret i8 0

uVol_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  store double %value, double* %uVol_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define i8 @setFloatingSpeciesAmount(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex, double %value) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret i8 0

MKKK_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %MKKK_value_conc = fdiv double %value, %uVol
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol2 = load double, double* %uVol_gep1, align 8
  %MKKK_amt = fmul double %MKKK_value_conc, %uVol2
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  store double %MKKK_amt, double* %MKKK_gep, align 8
  ret i8 1

MKKK_P_block:                                     ; preds = %entry
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol4 = load double, double* %uVol_gep3, align 8
  %MKKK_P_value_conc = fdiv double %value, %uVol4
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol6 = load double, double* %uVol_gep5, align 8
  %MKKK_P_amt = fmul double %MKKK_P_value_conc, %uVol6
  %FloatingSpeciesAmountsAlias_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load8 = load double*, double** %FloatingSpeciesAmountsAlias_gep7, align 8
  %MKKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load8, i32 1
  store double %MKKK_P_amt, double* %MKKK_P_gep, align 8
  ret i8 1

MKK_block:                                        ; preds = %entry
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol10 = load double, double* %uVol_gep9, align 8
  %MKK_value_conc = fdiv double %value, %uVol10
  %uVol_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol12 = load double, double* %uVol_gep11, align 8
  %MKK_amt = fmul double %MKK_value_conc, %uVol12
  %FloatingSpeciesAmountsAlias_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load14 = load double*, double** %FloatingSpeciesAmountsAlias_gep13, align 8
  %MKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load14, i32 2
  store double %MKK_amt, double* %MKK_gep, align 8
  ret i8 1

MKK_P_block:                                      ; preds = %entry
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol16 = load double, double* %uVol_gep15, align 8
  %MKK_P_value_conc = fdiv double %value, %uVol16
  %uVol_gep17 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol18 = load double, double* %uVol_gep17, align 8
  %MKK_P_amt = fmul double %MKK_P_value_conc, %uVol18
  %FloatingSpeciesAmountsAlias_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load20 = load double*, double** %FloatingSpeciesAmountsAlias_gep19, align 8
  %MKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load20, i32 3
  store double %MKK_P_amt, double* %MKK_P_gep, align 8
  ret i8 1

MKK_PP_block:                                     ; preds = %entry
  %uVol_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol22 = load double, double* %uVol_gep21, align 8
  %MKK_PP_value_conc = fdiv double %value, %uVol22
  %uVol_gep23 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol24 = load double, double* %uVol_gep23, align 8
  %MKK_PP_amt = fmul double %MKK_PP_value_conc, %uVol24
  %FloatingSpeciesAmountsAlias_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load26 = load double*, double** %FloatingSpeciesAmountsAlias_gep25, align 8
  %MKK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load26, i32 4
  store double %MKK_PP_amt, double* %MKK_PP_gep, align 8
  ret i8 1

MAPK_block:                                       ; preds = %entry
  %uVol_gep27 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol28 = load double, double* %uVol_gep27, align 8
  %MAPK_value_conc = fdiv double %value, %uVol28
  %uVol_gep29 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol30 = load double, double* %uVol_gep29, align 8
  %MAPK_amt = fmul double %MAPK_value_conc, %uVol30
  %FloatingSpeciesAmountsAlias_gep31 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load32 = load double*, double** %FloatingSpeciesAmountsAlias_gep31, align 8
  %MAPK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load32, i32 5
  store double %MAPK_amt, double* %MAPK_gep, align 8
  ret i8 1

MAPK_P_block:                                     ; preds = %entry
  %uVol_gep33 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol34 = load double, double* %uVol_gep33, align 8
  %MAPK_P_value_conc = fdiv double %value, %uVol34
  %uVol_gep35 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol36 = load double, double* %uVol_gep35, align 8
  %MAPK_P_amt = fmul double %MAPK_P_value_conc, %uVol36
  %FloatingSpeciesAmountsAlias_gep37 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load38 = load double*, double** %FloatingSpeciesAmountsAlias_gep37, align 8
  %MAPK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load38, i32 6
  store double %MAPK_P_amt, double* %MAPK_P_gep, align 8
  ret i8 1

MAPK_PP_block:                                    ; preds = %entry
  %uVol_gep39 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol40 = load double, double* %uVol_gep39, align 8
  %MAPK_PP_value_conc = fdiv double %value, %uVol40
  %uVol_gep41 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol42 = load double, double* %uVol_gep41, align 8
  %MAPK_PP_amt = fmul double %MAPK_PP_value_conc, %uVol42
  %FloatingSpeciesAmountsAlias_gep43 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load44 = load double*, double** %FloatingSpeciesAmountsAlias_gep43, align 8
  %MAPK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load44, i32 7
  store double %MAPK_PP_amt, double* %MAPK_PP_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define i8 @setGlobalParameter(%rr_LLVMModelData* %modelData, i32 %globalParameterIndex, double %value) {
entry:
  switch i32 %globalParameterIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Information: function: define double @getFloatingSpeciesInitConcentrations(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

MKKK_block:                                       ; preds = %entry
  %MKKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  %MKKK_amt = load double, double* %MKKK_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %0 = load double, double* %uVol_gep, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %0
  ret double %MKKK_conc

MKKK_P_block:                                     ; preds = %entry
  %MKKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_gep, align 8
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %1 = load double, double* %uVol_gep1, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %1
  ret double %MKKK_P_conc

MKK_block:                                        ; preds = %entry
  %MKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  %MKK_amt = load double, double* %MKK_gep, align 8
  %uVol_gep2 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %2 = load double, double* %uVol_gep2, align 8
  %MKK_conc = fdiv double %MKK_amt, %2
  ret double %MKK_conc

MKK_P_block:                                      ; preds = %entry
  %MKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  %MKK_P_amt = load double, double* %MKK_P_gep, align 8
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %3 = load double, double* %uVol_gep3, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %3
  ret double %MKK_P_conc

MKK_PP_block:                                     ; preds = %entry
  %MKK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_gep, align 8
  %uVol_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %4 = load double, double* %uVol_gep4, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %4
  ret double %MKK_PP_conc

MAPK_block:                                       ; preds = %entry
  %MAPK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  %MAPK_amt = load double, double* %MAPK_gep, align 8
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %5 = load double, double* %uVol_gep5, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %5
  ret double %MAPK_conc

MAPK_P_block:                                     ; preds = %entry
  %MAPK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_gep, align 8
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %6 = load double, double* %uVol_gep6, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %6
  ret double %MAPK_P_conc

MAPK_PP_block:                                    ; preds = %entry
  %MAPK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_gep, align 8
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %7 = load double, double* %uVol_gep7, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %7
  ret double %MAPK_PP_conc
}

2024-01-24 21:49:06 Information: function: define i8 @setFloatingSpeciesInitConcentrations(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex, double %value) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret i8 0

MKKK_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %0 = load double, double* %uVol_gep, align 8
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %1 = load double, double* %uVol_gep1, align 8
  %MKKK_amt = fmul double %value, %1
  %MKKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  store double %MKKK_amt, double* %MKKK_gep, align 8
  ret i8 1

MKKK_P_block:                                     ; preds = %entry
  %uVol_gep2 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %2 = load double, double* %uVol_gep2, align 8
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %3 = load double, double* %uVol_gep3, align 8
  %MKKK_P_amt = fmul double %value, %3
  %MKKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  store double %MKKK_P_amt, double* %MKKK_P_gep, align 8
  ret i8 1

MKK_block:                                        ; preds = %entry
  %uVol_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %4 = load double, double* %uVol_gep4, align 8
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %5 = load double, double* %uVol_gep5, align 8
  %MKK_amt = fmul double %value, %5
  %MKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  store double %MKK_amt, double* %MKK_gep, align 8
  ret i8 1

MKK_P_block:                                      ; preds = %entry
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %6 = load double, double* %uVol_gep6, align 8
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %7 = load double, double* %uVol_gep7, align 8
  %MKK_P_amt = fmul double %value, %7
  %MKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  store double %MKK_P_amt, double* %MKK_P_gep, align 8
  ret i8 1

MKK_PP_block:                                     ; preds = %entry
  %uVol_gep8 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %8 = load double, double* %uVol_gep8, align 8
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %9 = load double, double* %uVol_gep9, align 8
  %MKK_PP_amt = fmul double %value, %9
  %MKK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  store double %MKK_PP_amt, double* %MKK_PP_gep, align 8
  ret i8 1

MAPK_block:                                       ; preds = %entry
  %uVol_gep10 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %10 = load double, double* %uVol_gep10, align 8
  %uVol_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %11 = load double, double* %uVol_gep11, align 8
  %MAPK_amt = fmul double %value, %11
  %MAPK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  store double %MAPK_amt, double* %MAPK_gep, align 8
  ret i8 1

MAPK_P_block:                                     ; preds = %entry
  %uVol_gep12 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %12 = load double, double* %uVol_gep12, align 8
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %13 = load double, double* %uVol_gep13, align 8
  %MAPK_P_amt = fmul double %value, %13
  %MAPK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  store double %MAPK_P_amt, double* %MAPK_P_gep, align 8
  ret i8 1

MAPK_PP_block:                                    ; preds = %entry
  %uVol_gep14 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %14 = load double, double* %uVol_gep14, align 8
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %15 = load double, double* %uVol_gep15, align 8
  %MAPK_PP_amt = fmul double %value, %15
  %MAPK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  store double %MAPK_PP_amt, double* %MAPK_PP_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define double @getFloatingSpeciesInitAmounts(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

MKKK_block:                                       ; preds = %entry
  %MKKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  %MKKK_amt = load double, double* %MKKK_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %0 = load double, double* %uVol_gep, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %0
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %1 = load double, double* %uVol_gep1, align 8
  %MKKK_amt2 = fmul double %MKKK_conc, %1
  ret double %MKKK_amt2

MKKK_P_block:                                     ; preds = %entry
  %MKKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_gep, align 8
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %2 = load double, double* %uVol_gep3, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %2
  %uVol_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %3 = load double, double* %uVol_gep4, align 8
  %MKKK_P_amt5 = fmul double %MKKK_P_conc, %3
  ret double %MKKK_P_amt5

MKK_block:                                        ; preds = %entry
  %MKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  %MKK_amt = load double, double* %MKK_gep, align 8
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %4 = load double, double* %uVol_gep6, align 8
  %MKK_conc = fdiv double %MKK_amt, %4
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %5 = load double, double* %uVol_gep7, align 8
  %MKK_amt8 = fmul double %MKK_conc, %5
  ret double %MKK_amt8

MKK_P_block:                                      ; preds = %entry
  %MKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  %MKK_P_amt = load double, double* %MKK_P_gep, align 8
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %6 = load double, double* %uVol_gep9, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %6
  %uVol_gep10 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %7 = load double, double* %uVol_gep10, align 8
  %MKK_P_amt11 = fmul double %MKK_P_conc, %7
  ret double %MKK_P_amt11

MKK_PP_block:                                     ; preds = %entry
  %MKK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_gep, align 8
  %uVol_gep12 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %8 = load double, double* %uVol_gep12, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %8
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %9 = load double, double* %uVol_gep13, align 8
  %MKK_PP_amt14 = fmul double %MKK_PP_conc, %9
  ret double %MKK_PP_amt14

MAPK_block:                                       ; preds = %entry
  %MAPK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  %MAPK_amt = load double, double* %MAPK_gep, align 8
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %10 = load double, double* %uVol_gep15, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %10
  %uVol_gep16 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %11 = load double, double* %uVol_gep16, align 8
  %MAPK_amt17 = fmul double %MAPK_conc, %11
  ret double %MAPK_amt17

MAPK_P_block:                                     ; preds = %entry
  %MAPK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_gep, align 8
  %uVol_gep18 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %12 = load double, double* %uVol_gep18, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %12
  %uVol_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %13 = load double, double* %uVol_gep19, align 8
  %MAPK_P_amt20 = fmul double %MAPK_P_conc, %13
  ret double %MAPK_P_amt20

MAPK_PP_block:                                    ; preds = %entry
  %MAPK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_gep, align 8
  %uVol_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %14 = load double, double* %uVol_gep21, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %14
  %uVol_gep22 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %15 = load double, double* %uVol_gep22, align 8
  %MAPK_PP_amt23 = fmul double %MAPK_PP_conc, %15
  ret double %MAPK_PP_amt23
}

2024-01-24 21:49:06 Information: function: define i8 @setFloatingSpeciesInitAmounts(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex, double %value) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret i8 0

MKKK_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %0 = load double, double* %uVol_gep, align 8
  %MKKK_value_conc = fdiv double %value, %0
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %1 = load double, double* %uVol_gep1, align 8
  %MKKK_amt = fmul double %MKKK_value_conc, %1
  %MKKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  store double %MKKK_amt, double* %MKKK_gep, align 8
  ret i8 1

MKKK_P_block:                                     ; preds = %entry
  %uVol_gep2 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %2 = load double, double* %uVol_gep2, align 8
  %MKKK_P_value_conc = fdiv double %value, %2
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %3 = load double, double* %uVol_gep3, align 8
  %MKKK_P_amt = fmul double %MKKK_P_value_conc, %3
  %MKKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  store double %MKKK_P_amt, double* %MKKK_P_gep, align 8
  ret i8 1

MKK_block:                                        ; preds = %entry
  %uVol_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %4 = load double, double* %uVol_gep4, align 8
  %MKK_value_conc = fdiv double %value, %4
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %5 = load double, double* %uVol_gep5, align 8
  %MKK_amt = fmul double %MKK_value_conc, %5
  %MKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  store double %MKK_amt, double* %MKK_gep, align 8
  ret i8 1

MKK_P_block:                                      ; preds = %entry
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %6 = load double, double* %uVol_gep6, align 8
  %MKK_P_value_conc = fdiv double %value, %6
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %7 = load double, double* %uVol_gep7, align 8
  %MKK_P_amt = fmul double %MKK_P_value_conc, %7
  %MKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  store double %MKK_P_amt, double* %MKK_P_gep, align 8
  ret i8 1

MKK_PP_block:                                     ; preds = %entry
  %uVol_gep8 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %8 = load double, double* %uVol_gep8, align 8
  %MKK_PP_value_conc = fdiv double %value, %8
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %9 = load double, double* %uVol_gep9, align 8
  %MKK_PP_amt = fmul double %MKK_PP_value_conc, %9
  %MKK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  store double %MKK_PP_amt, double* %MKK_PP_gep, align 8
  ret i8 1

MAPK_block:                                       ; preds = %entry
  %uVol_gep10 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %10 = load double, double* %uVol_gep10, align 8
  %MAPK_value_conc = fdiv double %value, %10
  %uVol_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %11 = load double, double* %uVol_gep11, align 8
  %MAPK_amt = fmul double %MAPK_value_conc, %11
  %MAPK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  store double %MAPK_amt, double* %MAPK_gep, align 8
  ret i8 1

MAPK_P_block:                                     ; preds = %entry
  %uVol_gep12 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %12 = load double, double* %uVol_gep12, align 8
  %MAPK_P_value_conc = fdiv double %value, %12
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %13 = load double, double* %uVol_gep13, align 8
  %MAPK_P_amt = fmul double %MAPK_P_value_conc, %13
  %MAPK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  store double %MAPK_P_amt, double* %MAPK_P_gep, align 8
  ret i8 1

MAPK_PP_block:                                    ; preds = %entry
  %uVol_gep14 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %14 = load double, double* %uVol_gep14, align 8
  %MAPK_PP_value_conc = fdiv double %value, %14
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %15 = load double, double* %uVol_gep15, align 8
  %MAPK_PP_amt = fmul double %MAPK_PP_value_conc, %15
  %MAPK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  store double %MAPK_PP_amt, double* %MAPK_PP_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define double @getBoundarySpeciesInitConcentrations(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Information: function: define i8 @setBoundarySpeciesInitConcentrations(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex, double %value) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Information: function: define double @getBoundarySpeciesInitAmounts(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Information: function: define i8 @setBoundarySpeciesInitAmounts(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex, double %value) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Information: function: define double @getCompartmentInitVolumes(%rr_LLVMModelData* %modelData, i32 %compartmentIndex) {
entry:
  switch i32 %compartmentIndex, label %default [
    i32 0, label %uVol_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

uVol_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %uVol_value = load double, double* %uVol_gep, align 8
  ret double %uVol_value
}

2024-01-24 21:49:06 Information: function: define i8 @setCompartmentInitVolumes(%rr_LLVMModelData* %modelData, i32 %compartmentIndex, double %value) {
entry:
  switch i32 %compartmentIndex, label %default [
    i32 0, label %uVol_block
  ]

default:                                          ; preds = %entry
  ret i8 0

uVol_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  store double %value, double* %uVol_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define double @getGlobalParameterInitValue(%rr_LLVMModelData* %modelData, i32 %globalParameterIndex) {
entry:
  switch i32 %globalParameterIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Information: function: define i8 @setGlobalParameterInitValue(%rr_LLVMModelData* %modelData, i32 %globalParameterIndex, double %value) {
entry:
  switch i32 %globalParameterIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Debug: removing expired model resource for hash b7cd732b1903ccffc732ff881ad2a295
2024-01-24 21:49:06 Debug: could not find existing cached resource for hash b7cd732b1903ccffc732ff881ad2a295, inserting new resources into cache
2024-01-24 21:49:06 Information: resetting init conditions
2024-01-24 21:49:06 Information: resetting time
2024-01-24 21:49:06 Information: resetting model type 64
2024-01-24 21:49:06 Information: resetting model type 32
2024-01-24 21:49:06 Information: resetting model type 16
2024-01-24 21:49:06 Information: resetting model type 128
2024-01-24 21:49:06 Debug: virtual void rrllvm::LLVMExecutableModel::reset(int)LLVMModelData:
size: 416
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]


2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]

LLVMModelData:
size: 416
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: creating CVODEIntegrator
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]

LLVMModelData:
size: 416
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]

LLVMModelData:
size: 416
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]

LLVMModelData:
size: 416
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]

LLVMModelData:
size: 416
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: resetting time
2024-01-24 21:49:06 Information: resetting model type 32
2024-01-24 21:49:06 Debug: virtual void rrllvm::LLVMExecutableModel::reset(int)LLVMModelData:
size: 416
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]


2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]

LLVMModelData:
size: 416
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]


2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]

LLVMModelData:
size: 416
flags: 0
time: 0.00000000
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]


2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]

LLVMModelData:
size: 416
flags: 0
time: 0.00000000
numIndFloatingSpecies: 8
numIndGlobalParameters: 0
globalParameters: 
[]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 0
initGlobalParameters: 
[]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[]
Init GlobalParameters:
[]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Debug: The following is selected:
2024-01-24 21:49:06 Debug: A Selection Record --
Index: -1
p1: time
p2: 
SelectionType: 1

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 0
p1: MKKK
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 1
p1: MKKK_P
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 2
p1: MKK
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 3
p1: MKK_P
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 4
p1: MKK_PP
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 5
p1: MAPK
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 6
p1: MAPK_P
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 7
p1: MAPK_PP
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: Created default TimeCourse selection list.
2024-01-24 21:49:06 Debug: Created default SteadyState selection list.
2024-01-24 21:49:06 Trace: DictionaryHolder::~DictionaryHolder(), deleting dictionary 0
2024-01-24 21:49:06 Debug: rr::RoadRunnerImpl::~RoadRunnerImpl(), global instance count: 2
2024-01-24 21:49:06 Debug: virtual rrllvm::LLVMExecutableModel::~LLVMExecutableModel()
2024-01-24 21:49:06 Debug: rrllvm::ModelResources::~ModelResources()
2024-01-24 21:49:06 Debug: Setting integrator to cvode
2024-01-24 21:49:06 Debug: Creating new integrator for cvode
2024-01-24 21:49:06 Information: creating CVODEIntegrator
2024-01-24 21:49:06 Debug: Setting steady state solver to nleq2
2024-01-24 21:49:06 Debug: Creating new steady state solver for nleq2
2024-01-24 21:49:06 Debug: Setting Sensitivity solver to forward
2024-01-24 21:49:06 Debug: Creating new sensitivity solver for forward
2024-01-24 21:49:06 Debug: no cached model found for 2ee24f4b8b4470b8a29175ba49f9f554, creating new one
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_lognormal_four"; fn type: true; at addr: 0x7fd36d48a660
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_laplace_four"; fn type: true; at addr: 0x7fd36d48e9b0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_poisson"; fn type: true; at addr: 0x7fd36d48bde0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_lognormal"; fn type: true; at addr: 0x7fd36d48aa50
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_gamma"; fn type: true; at addr: 0x7fd36d48b660
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_cauchy"; fn type: true; at addr: 0x7fd36d48ae20
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_binomial"; fn type: true; at addr: 0x7fd36d48f440
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_uniform"; fn type: true; at addr: 0x7fd36d48c9e0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_chisquare_three"; fn type: true; at addr: 0x7fd36d48b250
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_normal"; fn type: true; at addr: 0x7fd36d48a190
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_exponential"; fn type: true; at addr: 0x7fd36d48c4f0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_laplace_one"; fn type: true; at addr: 0x7fd36d48d3a0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_chisquare"; fn type: true; at addr: 0x7fd36d48b0f0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_cauchy_one"; fn type: true; at addr: 0x7fd36d48ab80
2024-01-24 21:49:06 Debug: Creating function "rr_max"; fn type: true; at addr: 0x7fd36d4d98c0
2024-01-24 21:49:06 Debug: Creating function "arctanh"; fn type: true; at addr: 0x7fd36d4d9840
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_bernoulli"; fn type: true; at addr: 0x7fd36d48c280
2024-01-24 21:49:06 Debug: Creating function "rr_min"; fn type: true; at addr: 0x7fd36d4d98d0
2024-01-24 21:49:06 Debug: Creating function "arccosh"; fn type: true; at addr: 0x7fd36d4d97f0
2024-01-24 21:49:06 Debug: Creating function "sech"; fn type: true; at addr: 0x7fd36d4d9560
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_binomial_four"; fn type: true; at addr: 0x7fd36d48fa90
2024-01-24 21:49:06 Debug: Creating function "rr_rootd"; fn type: true; at addr: 0x7fd36d4d9410
2024-01-24 21:49:06 Debug: Creating function "arcsinh"; fn type: true; at addr: 0x7fd36d4d97a0
2024-01-24 21:49:06 Debug: Creating function "rr_logd"; fn type: true; at addr: 0x7fd36d4d92b0
2024-01-24 21:49:06 Debug: Creating function "rr_factoriald"; fn type: true; at addr: 0x7fd36d4d92f0
2024-01-24 21:49:06 Debug: Creating function "rr_factoriali"; fn type: true; at addr: 0x7fd36d4d93f0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_laplace"; fn type: true; at addr: 0x7fd36d48d7d0
2024-01-24 21:49:06 Debug: Creating function "csch"; fn type: true; at addr: 0x7fd36d4d9680
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_rayleigh_three"; fn type: true; at addr: 0x7fd36d48e2e0
2024-01-24 21:49:06 Debug: Creating function "csc"; fn type: true; at addr: 0x7fd36d4d9520
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_rayleigh"; fn type: true; at addr: 0x7fd36d48c760
2024-01-24 21:49:06 Debug: Creating function "coth"; fn type: true; at addr: 0x7fd36d4d9700
2024-01-24 21:49:06 Debug: Creating function "sec"; fn type: true; at addr: 0x7fd36d4d9450
2024-01-24 21:49:06 Debug: Creating function "cot"; fn type: true; at addr: 0x7fd36d4d9470
2024-01-24 21:49:06 Debug: Creating function "arcsech"; fn type: true; at addr: 0x7fd36d4d95e0
2024-01-24 21:49:06 Debug: Creating function "arcsec"; fn type: true; at addr: 0x7fd36d4d9500
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_exponential_three"; fn type: true; at addr: 0x7fd36d48dc40
2024-01-24 21:49:06 Debug: Creating function "arccsch"; fn type: true; at addr: 0x7fd36d4d96a0
2024-01-24 21:49:06 Debug: Creating function "arccsc"; fn type: true; at addr: 0x7fd36d4d9540
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_cauchy_four"; fn type: true; at addr: 0x7fd36d48cc80
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_normal_four"; fn type: true; at addr: 0x7fd36d48a2b0
2024-01-24 21:49:06 Debug: Creating function "arccoth"; fn type: true; at addr: 0x7fd36d4d9740
2024-01-24 21:49:06 Debug: Creating function "rr_arccot_negzero"; fn type: true; at addr: 0x7fd36d4d94c0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_gamma_four"; fn type: true; at addr: 0x7fd36d48b7f0
2024-01-24 21:49:06 Debug: Creating function "rr_distrib_poisson_three"; fn type: true; at addr: 0x7fd36d48bee0
2024-01-24 21:49:06 Debug: Creating function "quotient"; fn type: true; at addr: 0x7fd36d4d98a0
2024-01-24 21:49:06 Debug: Creating function "arccot"; fn type: true; at addr: 0x7fd36d4d9490
2024-01-24 21:49:06 Information: Using LLVM symbol/value cache
2024-01-24 21:49:06 Debug: found 8 independent and 0 dependent floating species.
floating species [0] = 'MKKK'
floating species [1] = 'MKKK_P'
floating species [2] = 'MKK'
floating species [3] = 'MKK_P'
floating species [4] = 'MKK_PP'
floating species [5] = 'MAPK'
floating species [6] = 'MAPK_P'
floating species [7] = 'MAPK_PP'
found 8 independent and 0 dependent initial floating species.

2024-01-24 21:49:06 Debug: found 1 independent and 0 dependent compartments.
compartment [0] = 'uVol'

2024-01-24 21:49:06 Debug: found 0 independent and 0 dependent boundary species.
found 0 independent and 0 dependent initial boundary species.

2024-01-24 21:49:06 Debug: found 22 independent and 0 dependent global parameters.
global parameter [0] = 'J0_K1'
global parameter [1] = 'J0_n'
global parameter [2] = 'J0_Ki'
global parameter [3] = 'J0_V1'
global parameter [4] = 'J1_KK2'
global parameter [5] = 'J1_V2'
global parameter [6] = 'J2_KK3'
global parameter [7] = 'J2_k3'
global parameter [8] = 'J3_KK4'
global parameter [9] = 'J3_k4'
global parameter [10] = 'J4_KK5'
global parameter [11] = 'J4_V5'
global parameter [12] = 'J5_KK6'
global parameter [13] = 'J5_V6'
global parameter [14] = 'J6_KK7'
global parameter [15] = 'J6_k7'
global parameter [16] = 'J7_KK8'
global parameter [17] = 'J7_k8'
global parameter [18] = 'J8_KK9'
global parameter [19] = 'J8_V9'
global parameter [20] = 'J9_KK10'
global parameter [21] = 'J9_V10'

2024-01-24 21:49:06 Trace: processing species MKKK

2024-01-24 21:49:06 Trace: processing species MKKK_P

2024-01-24 21:49:06 Trace: processing species MKK

2024-01-24 21:49:06 Trace: processing species MKK_P

2024-01-24 21:49:06 Trace: processing species MKK_PP

2024-01-24 21:49:06 Trace: processing species MAPK

2024-01-24 21:49:06 Trace: processing species MAPK_P

2024-01-24 21:49:06 Trace: processing species MAPK_PP

2024-01-24 21:49:06 Trace: global parameter J0_K1 initial value: 10
2024-01-24 21:49:06 Trace: global parameter J0_n initial value: 1
2024-01-24 21:49:06 Trace: global parameter J0_Ki initial value: 9
2024-01-24 21:49:06 Trace: global parameter J0_V1 initial value: 2.5
2024-01-24 21:49:06 Trace: global parameter J1_KK2 initial value: 8
2024-01-24 21:49:06 Trace: global parameter J1_V2 initial value: 0.25
2024-01-24 21:49:06 Trace: global parameter J2_KK3 initial value: 15
2024-01-24 21:49:06 Trace: global parameter J2_k3 initial value: 0.025
2024-01-24 21:49:06 Trace: global parameter J3_KK4 initial value: 15
2024-01-24 21:49:06 Trace: global parameter J3_k4 initial value: 0.025
2024-01-24 21:49:06 Trace: global parameter J4_KK5 initial value: 15
2024-01-24 21:49:06 Trace: global parameter J4_V5 initial value: 0.75
2024-01-24 21:49:06 Trace: global parameter J5_KK6 initial value: 15
2024-01-24 21:49:06 Trace: global parameter J5_V6 initial value: 0.75
2024-01-24 21:49:06 Trace: global parameter J6_KK7 initial value: 15
2024-01-24 21:49:06 Trace: global parameter J6_k7 initial value: 0.025
2024-01-24 21:49:06 Trace: global parameter J7_KK8 initial value: 15
2024-01-24 21:49:06 Trace: global parameter J7_k8 initial value: 0.025
2024-01-24 21:49:06 Trace: global parameter J8_KK9 initial value: 15
2024-01-24 21:49:06 Trace: global parameter J8_V9 initial value: 0.5
2024-01-24 21:49:06 Trace: global parameter J9_KK10 initial value: 15
2024-01-24 21:49:06 Trace: global parameter J9_V10 initial value: 0.5
2024-01-24 21:49:06 Debug: boundarySpecies: 

2024-01-24 21:49:06 Debug: reactions: 
2024-01-24 21:49:06 Debug: J0, 
2024-01-24 21:49:06 Debug: J1, 
2024-01-24 21:49:06 Debug: J2, 
2024-01-24 21:49:06 Debug: J3, 
2024-01-24 21:49:06 Debug: J4, 
2024-01-24 21:49:06 Debug: J5, 
2024-01-24 21:49:06 Debug: J6, 
2024-01-24 21:49:06 Debug: J7, 
2024-01-24 21:49:06 Debug: J8, 
2024-01-24 21:49:06 Debug: J9, 
2024-01-24 21:49:06 Debug: 

2024-01-24 21:49:06 Trace: 	{0, 0}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{0, 0} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{1, 0}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{1, 0} : 0 + 1

2024-01-24 21:49:06 Trace: 	{1, 1}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{1, 1} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{0, 1}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{0, 1} : 0 + 1

2024-01-24 21:49:06 Trace: 	{2, 2}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{2, 2} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{3, 2}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{3, 2} : 0 + 1

2024-01-24 21:49:06 Trace: 	{3, 3}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{3, 3} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{4, 3}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{4, 3} : 0 + 1

2024-01-24 21:49:06 Trace: 	{4, 4}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{4, 4} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{3, 4}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{3, 4} : 0 + 1

2024-01-24 21:49:06 Trace: 	{3, 5}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{3, 5} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{2, 5}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{2, 5} : 0 + 1

2024-01-24 21:49:06 Trace: 	{5, 6}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{5, 6} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{6, 6}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{6, 6} : 0 + 1

2024-01-24 21:49:06 Trace: 	{6, 7}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{6, 7} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{7, 7}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{7, 7} : 0 + 1

2024-01-24 21:49:06 Trace: 	{7, 8}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{7, 8} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{6, 8}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{6, 8} : 0 + 1

2024-01-24 21:49:06 Trace: 	{6, 9}, #reactants: 1 #products: 0
2024-01-24 21:49:06 Debug: 	{6, 9} : -1 * 1 + 0

2024-01-24 21:49:06 Trace: 	{5, 9}, #reactants: 0 #products: 1
2024-01-24 21:49:06 Debug: 	{5, 9} : 0 + 1

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J0_K1
2024-01-24 21:49:06 Debug: caching value for J0_n
2024-01-24 21:49:06 Debug: caching value for J0_Ki
2024-01-24 21:49:06 Debug: caching value for J0_V1
2024-01-24 21:49:06 Debug: caching value for J1_KK2
2024-01-24 21:49:06 Debug: caching value for J1_V2
2024-01-24 21:49:06 Debug: caching value for J2_KK3
2024-01-24 21:49:06 Debug: caching value for J2_k3
2024-01-24 21:49:06 Debug: caching value for J3_KK4
2024-01-24 21:49:06 Debug: caching value for J3_k4
2024-01-24 21:49:06 Debug: caching value for J4_KK5
2024-01-24 21:49:06 Debug: caching value for J4_V5
2024-01-24 21:49:06 Debug: caching value for J5_KK6
2024-01-24 21:49:06 Debug: caching value for J5_V6
2024-01-24 21:49:06 Debug: caching value for J6_KK7
2024-01-24 21:49:06 Debug: caching value for J6_k7
2024-01-24 21:49:06 Debug: caching value for J7_KK8
2024-01-24 21:49:06 Debug: caching value for J7_k8
2024-01-24 21:49:06 Debug: caching value for J8_KK9
2024-01-24 21:49:06 Debug: caching value for J8_V9
2024-01-24 21:49:06 Debug: caching value for J9_KK10
2024-01-24 21:49:06 Debug: caching value for J9_V10
2024-01-24 21:49:06 Information: function: define void @evalInitialConditions(%rr_LLVMModelData* %modelData, i32 %flags) {
entry:
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  store double 9.000000e+01, double* %MKKK_gep, align 8
  %FloatingSpeciesAmountsAlias_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load2 = load double*, double** %FloatingSpeciesAmountsAlias_gep1, align 8
  %MKKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load2, i32 1
  store double 1.000000e+01, double* %MKKK_P_gep, align 8
  %FloatingSpeciesAmountsAlias_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load4 = load double*, double** %FloatingSpeciesAmountsAlias_gep3, align 8
  %MKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load4, i32 2
  store double 2.800000e+02, double* %MKK_gep, align 8
  %FloatingSpeciesAmountsAlias_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load6 = load double*, double** %FloatingSpeciesAmountsAlias_gep5, align 8
  %MKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load6, i32 3
  store double 1.000000e+01, double* %MKK_P_gep, align 8
  %FloatingSpeciesAmountsAlias_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load8 = load double*, double** %FloatingSpeciesAmountsAlias_gep7, align 8
  %MKK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load8, i32 4
  store double 1.000000e+01, double* %MKK_PP_gep, align 8
  %FloatingSpeciesAmountsAlias_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load10 = load double*, double** %FloatingSpeciesAmountsAlias_gep9, align 8
  %MAPK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load10, i32 5
  store double 2.800000e+02, double* %MAPK_gep, align 8
  %FloatingSpeciesAmountsAlias_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load12 = load double*, double** %FloatingSpeciesAmountsAlias_gep11, align 8
  %MAPK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load12, i32 6
  store double 1.000000e+01, double* %MAPK_P_gep, align 8
  %FloatingSpeciesAmountsAlias_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load14 = load double*, double** %FloatingSpeciesAmountsAlias_gep13, align 8
  %MAPK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load14, i32 7
  store double 1.000000e+01, double* %MAPK_PP_gep, align 8
  %J0_K1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 0
  store double 1.000000e+01, double* %J0_K1_gep, align 8
  %J0_n_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 1
  store double 1.000000e+00, double* %J0_n_gep, align 8
  %J0_Ki_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 2
  store double 9.000000e+00, double* %J0_Ki_gep, align 8
  %J0_V1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 3
  store double 2.500000e+00, double* %J0_V1_gep, align 8
  %J1_KK2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 4
  store double 8.000000e+00, double* %J1_KK2_gep, align 8
  %J1_V2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 5
  store double 2.500000e-01, double* %J1_V2_gep, align 8
  %J2_KK3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 6
  store double 1.500000e+01, double* %J2_KK3_gep, align 8
  %J2_k3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 7
  store double 2.500000e-02, double* %J2_k3_gep, align 8
  %J3_KK4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 8
  store double 1.500000e+01, double* %J3_KK4_gep, align 8
  %J3_k4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 9
  store double 2.500000e-02, double* %J3_k4_gep, align 8
  %J4_KK5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 10
  store double 1.500000e+01, double* %J4_KK5_gep, align 8
  %J4_V5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 11
  store double 7.500000e-01, double* %J4_V5_gep, align 8
  %J5_KK6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 12
  store double 1.500000e+01, double* %J5_KK6_gep, align 8
  %J5_V6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 13
  store double 7.500000e-01, double* %J5_V6_gep, align 8
  %J6_KK7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 14
  store double 1.500000e+01, double* %J6_KK7_gep, align 8
  %J6_k7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 15
  store double 2.500000e-02, double* %J6_k7_gep, align 8
  %J7_KK8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 16
  store double 1.500000e+01, double* %J7_KK8_gep, align 8
  %J7_k8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 17
  store double 2.500000e-02, double* %J7_k8_gep, align 8
  %J8_KK9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 18
  store double 1.500000e+01, double* %J8_KK9_gep, align 8
  %J8_V9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 19
  store double 5.000000e-01, double* %J8_V9_gep, align 8
  %J9_KK10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 20
  store double 1.500000e+01, double* %J9_KK10_gep, align 8
  %J9_V10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 21
  store double 5.000000e-01, double* %J9_V10_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  store double 1.000000e+00, double* %uVol_gep, align 8
  %Stoichiometry_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 13
  %stoichiometry = load %rr_csr_matrix*, %rr_csr_matrix** %Stoichiometry_gep, align 8
  %0 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 0, i32 0, double -1.000000e+00)
  %1 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 1, i32 0, double 1.000000e+00)
  %2 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 1, i32 1, double -1.000000e+00)
  %3 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 0, i32 1, double 1.000000e+00)
  %4 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 2, i32 2, double -1.000000e+00)
  %5 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 3, i32 2, double 1.000000e+00)
  %6 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 3, i32 3, double -1.000000e+00)
  %7 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 4, i32 3, double 1.000000e+00)
  %8 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 4, i32 4, double -1.000000e+00)
  %9 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 3, i32 4, double 1.000000e+00)
  %10 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 3, i32 5, double -1.000000e+00)
  %11 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 2, i32 5, double 1.000000e+00)
  %12 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 5, i32 6, double -1.000000e+00)
  %13 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 6, i32 6, double 1.000000e+00)
  %14 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 6, i32 7, double -1.000000e+00)
  %15 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 7, i32 7, double 1.000000e+00)
  %16 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 7, i32 8, double -1.000000e+00)
  %17 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 6, i32 8, double 1.000000e+00)
  %18 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 6, i32 9, double -1.000000e+00)
  %19 = call i8 @csr_matrix_set_nz(%rr_csr_matrix* %stoichiometry, i32 5, i32 9, double 1.000000e+00)
  %FloatingSpeciesAmountsAlias_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load16 = load double*, double** %FloatingSpeciesAmountsAlias_gep15, align 8
  %MKKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load16, i32 0
  %MKKK_amt = load double, double* %MKKK_amt_gep_gep, align 8
  %uVol_gep17 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep17, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %uVol
  %MKKK_amt18 = fmul double %MKKK_conc, 1.000000e+00
  %MKKK_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  store double %MKKK_amt18, double* %MKKK_gep19, align 8
  %FloatingSpeciesAmountsAlias_gep20 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load21 = load double*, double** %FloatingSpeciesAmountsAlias_gep20, align 8
  %MKKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load21, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_amt_gep_gep, align 8
  %uVol_gep22 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol23 = load double, double* %uVol_gep22, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %uVol23
  %MKKK_P_amt24 = fmul double %MKKK_P_conc, 1.000000e+00
  %MKKK_P_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  store double %MKKK_P_amt24, double* %MKKK_P_gep25, align 8
  %FloatingSpeciesAmountsAlias_gep26 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load27 = load double*, double** %FloatingSpeciesAmountsAlias_gep26, align 8
  %MKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load27, i32 2
  %MKK_amt = load double, double* %MKK_amt_gep_gep, align 8
  %uVol_gep28 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol29 = load double, double* %uVol_gep28, align 8
  %MKK_conc = fdiv double %MKK_amt, %uVol29
  %MKK_amt30 = fmul double %MKK_conc, 1.000000e+00
  %MKK_gep31 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  store double %MKK_amt30, double* %MKK_gep31, align 8
  %FloatingSpeciesAmountsAlias_gep32 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load33 = load double*, double** %FloatingSpeciesAmountsAlias_gep32, align 8
  %MKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load33, i32 3
  %MKK_P_amt = load double, double* %MKK_P_amt_gep_gep, align 8
  %uVol_gep34 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol35 = load double, double* %uVol_gep34, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %uVol35
  %MKK_P_amt36 = fmul double %MKK_P_conc, 1.000000e+00
  %MKK_P_gep37 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  store double %MKK_P_amt36, double* %MKK_P_gep37, align 8
  %FloatingSpeciesAmountsAlias_gep38 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load39 = load double*, double** %FloatingSpeciesAmountsAlias_gep38, align 8
  %MKK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load39, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_amt_gep_gep, align 8
  %uVol_gep40 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol41 = load double, double* %uVol_gep40, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %uVol41
  %MKK_PP_amt42 = fmul double %MKK_PP_conc, 1.000000e+00
  %MKK_PP_gep43 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  store double %MKK_PP_amt42, double* %MKK_PP_gep43, align 8
  %FloatingSpeciesAmountsAlias_gep44 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load45 = load double*, double** %FloatingSpeciesAmountsAlias_gep44, align 8
  %MAPK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load45, i32 5
  %MAPK_amt = load double, double* %MAPK_amt_gep_gep, align 8
  %uVol_gep46 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol47 = load double, double* %uVol_gep46, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %uVol47
  %MAPK_amt48 = fmul double %MAPK_conc, 1.000000e+00
  %MAPK_gep49 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  store double %MAPK_amt48, double* %MAPK_gep49, align 8
  %FloatingSpeciesAmountsAlias_gep50 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load51 = load double*, double** %FloatingSpeciesAmountsAlias_gep50, align 8
  %MAPK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load51, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_amt_gep_gep, align 8
  %uVol_gep52 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol53 = load double, double* %uVol_gep52, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %uVol53
  %MAPK_P_amt54 = fmul double %MAPK_P_conc, 1.000000e+00
  %MAPK_P_gep55 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  store double %MAPK_P_amt54, double* %MAPK_P_gep55, align 8
  %FloatingSpeciesAmountsAlias_gep56 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load57 = load double*, double** %FloatingSpeciesAmountsAlias_gep56, align 8
  %MAPK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load57, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_amt_gep_gep, align 8
  %uVol_gep58 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol59 = load double, double* %uVol_gep58, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %uVol59
  %MAPK_PP_amt60 = fmul double %MAPK_PP_conc, 1.000000e+00
  %MAPK_PP_gep61 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  store double %MAPK_PP_amt60, double* %MAPK_PP_gep61, align 8
  %uVol_gep62 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol63 = load double, double* %uVol_gep62, align 8
  %uVol_gep64 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  store double %uVol63, double* %uVol_gep64, align 8
  %J0_K1_gep65 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 0
  %J0_K1 = load double, double* %J0_K1_gep65, align 8
  %J0_K1_gep66 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 0
  store double %J0_K1, double* %J0_K1_gep66, align 8
  %J0_n_gep67 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 1
  %J0_n = load double, double* %J0_n_gep67, align 8
  %J0_n_gep68 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 1
  store double %J0_n, double* %J0_n_gep68, align 8
  %J0_Ki_gep69 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 2
  %J0_Ki = load double, double* %J0_Ki_gep69, align 8
  %J0_Ki_gep70 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 2
  store double %J0_Ki, double* %J0_Ki_gep70, align 8
  %J0_V1_gep71 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 3
  %J0_V1 = load double, double* %J0_V1_gep71, align 8
  %J0_V1_gep72 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 3
  store double %J0_V1, double* %J0_V1_gep72, align 8
  %J1_KK2_gep73 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 4
  %J1_KK2 = load double, double* %J1_KK2_gep73, align 8
  %J1_KK2_gep74 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 4
  store double %J1_KK2, double* %J1_KK2_gep74, align 8
  %J1_V2_gep75 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 5
  %J1_V2 = load double, double* %J1_V2_gep75, align 8
  %J1_V2_gep76 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 5
  store double %J1_V2, double* %J1_V2_gep76, align 8
  %J2_KK3_gep77 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 6
  %J2_KK3 = load double, double* %J2_KK3_gep77, align 8
  %J2_KK3_gep78 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 6
  store double %J2_KK3, double* %J2_KK3_gep78, align 8
  %J2_k3_gep79 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 7
  %J2_k3 = load double, double* %J2_k3_gep79, align 8
  %J2_k3_gep80 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 7
  store double %J2_k3, double* %J2_k3_gep80, align 8
  %J3_KK4_gep81 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 8
  %J3_KK4 = load double, double* %J3_KK4_gep81, align 8
  %J3_KK4_gep82 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 8
  store double %J3_KK4, double* %J3_KK4_gep82, align 8
  %J3_k4_gep83 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 9
  %J3_k4 = load double, double* %J3_k4_gep83, align 8
  %J3_k4_gep84 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 9
  store double %J3_k4, double* %J3_k4_gep84, align 8
  %J4_KK5_gep85 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 10
  %J4_KK5 = load double, double* %J4_KK5_gep85, align 8
  %J4_KK5_gep86 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 10
  store double %J4_KK5, double* %J4_KK5_gep86, align 8
  %J4_V5_gep87 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 11
  %J4_V5 = load double, double* %J4_V5_gep87, align 8
  %J4_V5_gep88 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 11
  store double %J4_V5, double* %J4_V5_gep88, align 8
  %J5_KK6_gep89 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 12
  %J5_KK6 = load double, double* %J5_KK6_gep89, align 8
  %J5_KK6_gep90 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 12
  store double %J5_KK6, double* %J5_KK6_gep90, align 8
  %J5_V6_gep91 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 13
  %J5_V6 = load double, double* %J5_V6_gep91, align 8
  %J5_V6_gep92 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 13
  store double %J5_V6, double* %J5_V6_gep92, align 8
  %J6_KK7_gep93 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 14
  %J6_KK7 = load double, double* %J6_KK7_gep93, align 8
  %J6_KK7_gep94 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 14
  store double %J6_KK7, double* %J6_KK7_gep94, align 8
  %J6_k7_gep95 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 15
  %J6_k7 = load double, double* %J6_k7_gep95, align 8
  %J6_k7_gep96 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 15
  store double %J6_k7, double* %J6_k7_gep96, align 8
  %J7_KK8_gep97 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 16
  %J7_KK8 = load double, double* %J7_KK8_gep97, align 8
  %J7_KK8_gep98 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 16
  store double %J7_KK8, double* %J7_KK8_gep98, align 8
  %J7_k8_gep99 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 17
  %J7_k8 = load double, double* %J7_k8_gep99, align 8
  %J7_k8_gep100 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 17
  store double %J7_k8, double* %J7_k8_gep100, align 8
  %J8_KK9_gep101 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 18
  %J8_KK9 = load double, double* %J8_KK9_gep101, align 8
  %J8_KK9_gep102 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 18
  store double %J8_KK9, double* %J8_KK9_gep102, align 8
  %J8_V9_gep103 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 19
  %J8_V9 = load double, double* %J8_V9_gep103, align 8
  %J8_V9_gep104 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 19
  store double %J8_V9, double* %J8_V9_gep104, align 8
  %J9_KK10_gep105 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 20
  %J9_KK10 = load double, double* %J9_KK10_gep105, align 8
  %J9_KK10_gep106 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 20
  store double %J9_KK10, double* %J9_KK10_gep106, align 8
  %J9_V10_gep107 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 21
  %J9_V10 = load double, double* %J9_V10_gep107, align 8
  %J9_V10_gep108 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 21
  store double %J9_V10, double* %J9_V10_gep108, align 8
  ret void
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J0_V1
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: caching value for J0_Ki
2024-01-24 21:49:06 Debug: caching value for J0_n
2024-01-24 21:49:06 Debug: caching value for J0_K1
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J1_V2
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for J1_KK2
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J2_k3
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for J2_KK3
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J3_k4
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for J3_KK4
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J4_V5
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for J4_KK5
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J5_V6
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for J5_KK6
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J6_k7
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for J6_KK7
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J7_k8
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for J7_KK8
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J8_V9
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: caching value for J8_KK9
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for J9_V10
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for J9_KK10
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Information: function: define double @evalReactionRates(%rr_LLVMModelData* %modelData) {
entry:
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %J0_V1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 3
  %J0_V1 = load double, double* %J0_V1_gep, align 8
  %multmp = fmul double %uVol, %J0_V1
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  %MKKK_amt = load double, double* %MKKK_amt_gep_gep, align 8
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol2 = load double, double* %uVol_gep1, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %uVol2
  %multmp3 = fmul double %multmp, %MKKK_conc
  %FloatingSpeciesAmountsAlias_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load5 = load double*, double** %FloatingSpeciesAmountsAlias_gep4, align 8
  %MAPK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load5, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_amt_gep_gep, align 8
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol7 = load double, double* %uVol_gep6, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %uVol7
  %J0_Ki_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 2
  %J0_Ki = load double, double* %J0_Ki_gep, align 8
  %divtmp = fdiv double %MAPK_PP_conc, %J0_Ki
  %J0_n_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 1
  %J0_n = load double, double* %J0_n_gep, align 8
  %calltmp = call double @pow(double %divtmp, double %J0_n)
  %addtmp = fadd double 1.000000e+00, %calltmp
  %J0_K1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 0
  %J0_K1 = load double, double* %J0_K1_gep, align 8
  %FloatingSpeciesAmountsAlias_gep8 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load9 = load double*, double** %FloatingSpeciesAmountsAlias_gep8, align 8
  %MKKK_amt_gep_gep10 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load9, i32 0
  %MKKK_amt11 = load double, double* %MKKK_amt_gep_gep10, align 8
  %uVol_gep12 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol13 = load double, double* %uVol_gep12, align 8
  %MKKK_conc14 = fdiv double %MKKK_amt11, %uVol13
  %addtmp15 = fadd double %J0_K1, %MKKK_conc14
  %multmp16 = fmul double %addtmp, %addtmp15
  %divtmp17 = fdiv double %multmp3, %multmp16
  %J0_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 0
  store double %divtmp17, double* %J0_gep, align 8
  %uVol_gep18 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol19 = load double, double* %uVol_gep18, align 8
  %J1_V2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 5
  %J1_V2 = load double, double* %J1_V2_gep, align 8
  %multmp20 = fmul double %uVol19, %J1_V2
  %FloatingSpeciesAmountsAlias_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load22 = load double*, double** %FloatingSpeciesAmountsAlias_gep21, align 8
  %MKKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load22, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_amt_gep_gep, align 8
  %uVol_gep23 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol24 = load double, double* %uVol_gep23, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %uVol24
  %multmp25 = fmul double %multmp20, %MKKK_P_conc
  %J1_KK2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 4
  %J1_KK2 = load double, double* %J1_KK2_gep, align 8
  %FloatingSpeciesAmountsAlias_gep26 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load27 = load double*, double** %FloatingSpeciesAmountsAlias_gep26, align 8
  %MKKK_P_amt_gep_gep28 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load27, i32 1
  %MKKK_P_amt29 = load double, double* %MKKK_P_amt_gep_gep28, align 8
  %uVol_gep30 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol31 = load double, double* %uVol_gep30, align 8
  %MKKK_P_conc32 = fdiv double %MKKK_P_amt29, %uVol31
  %addtmp33 = fadd double %J1_KK2, %MKKK_P_conc32
  %divtmp34 = fdiv double %multmp25, %addtmp33
  %J1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 1
  store double %divtmp34, double* %J1_gep, align 8
  %uVol_gep35 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol36 = load double, double* %uVol_gep35, align 8
  %J2_k3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 7
  %J2_k3 = load double, double* %J2_k3_gep, align 8
  %multmp37 = fmul double %uVol36, %J2_k3
  %FloatingSpeciesAmountsAlias_gep38 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load39 = load double*, double** %FloatingSpeciesAmountsAlias_gep38, align 8
  %MKKK_P_amt_gep_gep40 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load39, i32 1
  %MKKK_P_amt41 = load double, double* %MKKK_P_amt_gep_gep40, align 8
  %uVol_gep42 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol43 = load double, double* %uVol_gep42, align 8
  %MKKK_P_conc44 = fdiv double %MKKK_P_amt41, %uVol43
  %multmp45 = fmul double %multmp37, %MKKK_P_conc44
  %FloatingSpeciesAmountsAlias_gep46 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load47 = load double*, double** %FloatingSpeciesAmountsAlias_gep46, align 8
  %MKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load47, i32 2
  %MKK_amt = load double, double* %MKK_amt_gep_gep, align 8
  %uVol_gep48 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol49 = load double, double* %uVol_gep48, align 8
  %MKK_conc = fdiv double %MKK_amt, %uVol49
  %multmp50 = fmul double %multmp45, %MKK_conc
  %J2_KK3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 6
  %J2_KK3 = load double, double* %J2_KK3_gep, align 8
  %FloatingSpeciesAmountsAlias_gep51 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load52 = load double*, double** %FloatingSpeciesAmountsAlias_gep51, align 8
  %MKK_amt_gep_gep53 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load52, i32 2
  %MKK_amt54 = load double, double* %MKK_amt_gep_gep53, align 8
  %uVol_gep55 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol56 = load double, double* %uVol_gep55, align 8
  %MKK_conc57 = fdiv double %MKK_amt54, %uVol56
  %addtmp58 = fadd double %J2_KK3, %MKK_conc57
  %divtmp59 = fdiv double %multmp50, %addtmp58
  %J2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 2
  store double %divtmp59, double* %J2_gep, align 8
  %uVol_gep60 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol61 = load double, double* %uVol_gep60, align 8
  %J3_k4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 9
  %J3_k4 = load double, double* %J3_k4_gep, align 8
  %multmp62 = fmul double %uVol61, %J3_k4
  %FloatingSpeciesAmountsAlias_gep63 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load64 = load double*, double** %FloatingSpeciesAmountsAlias_gep63, align 8
  %MKKK_P_amt_gep_gep65 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load64, i32 1
  %MKKK_P_amt66 = load double, double* %MKKK_P_amt_gep_gep65, align 8
  %uVol_gep67 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol68 = load double, double* %uVol_gep67, align 8
  %MKKK_P_conc69 = fdiv double %MKKK_P_amt66, %uVol68
  %multmp70 = fmul double %multmp62, %MKKK_P_conc69
  %FloatingSpeciesAmountsAlias_gep71 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load72 = load double*, double** %FloatingSpeciesAmountsAlias_gep71, align 8
  %MKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load72, i32 3
  %MKK_P_amt = load double, double* %MKK_P_amt_gep_gep, align 8
  %uVol_gep73 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol74 = load double, double* %uVol_gep73, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %uVol74
  %multmp75 = fmul double %multmp70, %MKK_P_conc
  %J3_KK4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 8
  %J3_KK4 = load double, double* %J3_KK4_gep, align 8
  %FloatingSpeciesAmountsAlias_gep76 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load77 = load double*, double** %FloatingSpeciesAmountsAlias_gep76, align 8
  %MKK_P_amt_gep_gep78 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load77, i32 3
  %MKK_P_amt79 = load double, double* %MKK_P_amt_gep_gep78, align 8
  %uVol_gep80 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol81 = load double, double* %uVol_gep80, align 8
  %MKK_P_conc82 = fdiv double %MKK_P_amt79, %uVol81
  %addtmp83 = fadd double %J3_KK4, %MKK_P_conc82
  %divtmp84 = fdiv double %multmp75, %addtmp83
  %J3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 3
  store double %divtmp84, double* %J3_gep, align 8
  %uVol_gep85 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol86 = load double, double* %uVol_gep85, align 8
  %J4_V5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 11
  %J4_V5 = load double, double* %J4_V5_gep, align 8
  %multmp87 = fmul double %uVol86, %J4_V5
  %FloatingSpeciesAmountsAlias_gep88 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load89 = load double*, double** %FloatingSpeciesAmountsAlias_gep88, align 8
  %MKK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load89, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_amt_gep_gep, align 8
  %uVol_gep90 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol91 = load double, double* %uVol_gep90, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %uVol91
  %multmp92 = fmul double %multmp87, %MKK_PP_conc
  %J4_KK5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 10
  %J4_KK5 = load double, double* %J4_KK5_gep, align 8
  %FloatingSpeciesAmountsAlias_gep93 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load94 = load double*, double** %FloatingSpeciesAmountsAlias_gep93, align 8
  %MKK_PP_amt_gep_gep95 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load94, i32 4
  %MKK_PP_amt96 = load double, double* %MKK_PP_amt_gep_gep95, align 8
  %uVol_gep97 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol98 = load double, double* %uVol_gep97, align 8
  %MKK_PP_conc99 = fdiv double %MKK_PP_amt96, %uVol98
  %addtmp100 = fadd double %J4_KK5, %MKK_PP_conc99
  %divtmp101 = fdiv double %multmp92, %addtmp100
  %J4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 4
  store double %divtmp101, double* %J4_gep, align 8
  %uVol_gep102 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol103 = load double, double* %uVol_gep102, align 8
  %J5_V6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 13
  %J5_V6 = load double, double* %J5_V6_gep, align 8
  %multmp104 = fmul double %uVol103, %J5_V6
  %FloatingSpeciesAmountsAlias_gep105 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load106 = load double*, double** %FloatingSpeciesAmountsAlias_gep105, align 8
  %MKK_P_amt_gep_gep107 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load106, i32 3
  %MKK_P_amt108 = load double, double* %MKK_P_amt_gep_gep107, align 8
  %uVol_gep109 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol110 = load double, double* %uVol_gep109, align 8
  %MKK_P_conc111 = fdiv double %MKK_P_amt108, %uVol110
  %multmp112 = fmul double %multmp104, %MKK_P_conc111
  %J5_KK6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 12
  %J5_KK6 = load double, double* %J5_KK6_gep, align 8
  %FloatingSpeciesAmountsAlias_gep113 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load114 = load double*, double** %FloatingSpeciesAmountsAlias_gep113, align 8
  %MKK_P_amt_gep_gep115 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load114, i32 3
  %MKK_P_amt116 = load double, double* %MKK_P_amt_gep_gep115, align 8
  %uVol_gep117 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol118 = load double, double* %uVol_gep117, align 8
  %MKK_P_conc119 = fdiv double %MKK_P_amt116, %uVol118
  %addtmp120 = fadd double %J5_KK6, %MKK_P_conc119
  %divtmp121 = fdiv double %multmp112, %addtmp120
  %J5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 5
  store double %divtmp121, double* %J5_gep, align 8
  %uVol_gep122 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol123 = load double, double* %uVol_gep122, align 8
  %J6_k7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 15
  %J6_k7 = load double, double* %J6_k7_gep, align 8
  %multmp124 = fmul double %uVol123, %J6_k7
  %FloatingSpeciesAmountsAlias_gep125 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load126 = load double*, double** %FloatingSpeciesAmountsAlias_gep125, align 8
  %MKK_PP_amt_gep_gep127 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load126, i32 4
  %MKK_PP_amt128 = load double, double* %MKK_PP_amt_gep_gep127, align 8
  %uVol_gep129 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol130 = load double, double* %uVol_gep129, align 8
  %MKK_PP_conc131 = fdiv double %MKK_PP_amt128, %uVol130
  %multmp132 = fmul double %multmp124, %MKK_PP_conc131
  %FloatingSpeciesAmountsAlias_gep133 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load134 = load double*, double** %FloatingSpeciesAmountsAlias_gep133, align 8
  %MAPK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load134, i32 5
  %MAPK_amt = load double, double* %MAPK_amt_gep_gep, align 8
  %uVol_gep135 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol136 = load double, double* %uVol_gep135, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %uVol136
  %multmp137 = fmul double %multmp132, %MAPK_conc
  %J6_KK7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 14
  %J6_KK7 = load double, double* %J6_KK7_gep, align 8
  %FloatingSpeciesAmountsAlias_gep138 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load139 = load double*, double** %FloatingSpeciesAmountsAlias_gep138, align 8
  %MAPK_amt_gep_gep140 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load139, i32 5
  %MAPK_amt141 = load double, double* %MAPK_amt_gep_gep140, align 8
  %uVol_gep142 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol143 = load double, double* %uVol_gep142, align 8
  %MAPK_conc144 = fdiv double %MAPK_amt141, %uVol143
  %addtmp145 = fadd double %J6_KK7, %MAPK_conc144
  %divtmp146 = fdiv double %multmp137, %addtmp145
  %J6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 6
  store double %divtmp146, double* %J6_gep, align 8
  %uVol_gep147 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol148 = load double, double* %uVol_gep147, align 8
  %J7_k8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 17
  %J7_k8 = load double, double* %J7_k8_gep, align 8
  %multmp149 = fmul double %uVol148, %J7_k8
  %FloatingSpeciesAmountsAlias_gep150 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load151 = load double*, double** %FloatingSpeciesAmountsAlias_gep150, align 8
  %MKK_PP_amt_gep_gep152 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load151, i32 4
  %MKK_PP_amt153 = load double, double* %MKK_PP_amt_gep_gep152, align 8
  %uVol_gep154 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol155 = load double, double* %uVol_gep154, align 8
  %MKK_PP_conc156 = fdiv double %MKK_PP_amt153, %uVol155
  %multmp157 = fmul double %multmp149, %MKK_PP_conc156
  %FloatingSpeciesAmountsAlias_gep158 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load159 = load double*, double** %FloatingSpeciesAmountsAlias_gep158, align 8
  %MAPK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load159, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_amt_gep_gep, align 8
  %uVol_gep160 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol161 = load double, double* %uVol_gep160, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %uVol161
  %multmp162 = fmul double %multmp157, %MAPK_P_conc
  %J7_KK8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 16
  %J7_KK8 = load double, double* %J7_KK8_gep, align 8
  %FloatingSpeciesAmountsAlias_gep163 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load164 = load double*, double** %FloatingSpeciesAmountsAlias_gep163, align 8
  %MAPK_P_amt_gep_gep165 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load164, i32 6
  %MAPK_P_amt166 = load double, double* %MAPK_P_amt_gep_gep165, align 8
  %uVol_gep167 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol168 = load double, double* %uVol_gep167, align 8
  %MAPK_P_conc169 = fdiv double %MAPK_P_amt166, %uVol168
  %addtmp170 = fadd double %J7_KK8, %MAPK_P_conc169
  %divtmp171 = fdiv double %multmp162, %addtmp170
  %J7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 7
  store double %divtmp171, double* %J7_gep, align 8
  %uVol_gep172 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol173 = load double, double* %uVol_gep172, align 8
  %J8_V9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 19
  %J8_V9 = load double, double* %J8_V9_gep, align 8
  %multmp174 = fmul double %uVol173, %J8_V9
  %FloatingSpeciesAmountsAlias_gep175 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load176 = load double*, double** %FloatingSpeciesAmountsAlias_gep175, align 8
  %MAPK_PP_amt_gep_gep177 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load176, i32 7
  %MAPK_PP_amt178 = load double, double* %MAPK_PP_amt_gep_gep177, align 8
  %uVol_gep179 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol180 = load double, double* %uVol_gep179, align 8
  %MAPK_PP_conc181 = fdiv double %MAPK_PP_amt178, %uVol180
  %multmp182 = fmul double %multmp174, %MAPK_PP_conc181
  %J8_KK9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 18
  %J8_KK9 = load double, double* %J8_KK9_gep, align 8
  %FloatingSpeciesAmountsAlias_gep183 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load184 = load double*, double** %FloatingSpeciesAmountsAlias_gep183, align 8
  %MAPK_PP_amt_gep_gep185 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load184, i32 7
  %MAPK_PP_amt186 = load double, double* %MAPK_PP_amt_gep_gep185, align 8
  %uVol_gep187 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol188 = load double, double* %uVol_gep187, align 8
  %MAPK_PP_conc189 = fdiv double %MAPK_PP_amt186, %uVol188
  %addtmp190 = fadd double %J8_KK9, %MAPK_PP_conc189
  %divtmp191 = fdiv double %multmp182, %addtmp190
  %J8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 8
  store double %divtmp191, double* %J8_gep, align 8
  %uVol_gep192 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol193 = load double, double* %uVol_gep192, align 8
  %J9_V10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 21
  %J9_V10 = load double, double* %J9_V10_gep, align 8
  %multmp194 = fmul double %uVol193, %J9_V10
  %FloatingSpeciesAmountsAlias_gep195 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load196 = load double*, double** %FloatingSpeciesAmountsAlias_gep195, align 8
  %MAPK_P_amt_gep_gep197 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load196, i32 6
  %MAPK_P_amt198 = load double, double* %MAPK_P_amt_gep_gep197, align 8
  %uVol_gep199 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol200 = load double, double* %uVol_gep199, align 8
  %MAPK_P_conc201 = fdiv double %MAPK_P_amt198, %uVol200
  %multmp202 = fmul double %multmp194, %MAPK_P_conc201
  %J9_KK10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 20
  %J9_KK10 = load double, double* %J9_KK10_gep, align 8
  %FloatingSpeciesAmountsAlias_gep203 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load204 = load double*, double** %FloatingSpeciesAmountsAlias_gep203, align 8
  %MAPK_P_amt_gep_gep205 = getelementptr double, double* %FloatingSpeciesAmountsAlias_load204, i32 6
  %MAPK_P_amt206 = load double, double* %MAPK_P_amt_gep_gep205, align 8
  %uVol_gep207 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol208 = load double, double* %uVol_gep207, align 8
  %MAPK_P_conc209 = fdiv double %MAPK_P_amt206, %uVol208
  %addtmp210 = fadd double %J9_KK10, %MAPK_P_conc209
  %divtmp211 = fdiv double %multmp202, %addtmp210
  %J9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 38, i32 9
  store double %divtmp211, double* %J9_gep, align 8
  ret double 1.000000e+00
}

2024-01-24 21:49:06 Information: function: define double @getBoundarySpeciesAmount(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define double @getFloatingSpeciesAmount(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

MKKK_block:                                       ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  %MKKK_amt = load double, double* %MKKK_amt_gep_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %uVol
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol2 = load double, double* %uVol_gep1, align 8
  %MKKK_amt3 = fmul double %MKKK_conc, %uVol2
  ret double %MKKK_amt3

MKKK_P_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load5 = load double*, double** %FloatingSpeciesAmountsAlias_gep4, align 8
  %MKKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load5, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_amt_gep_gep, align 8
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol7 = load double, double* %uVol_gep6, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %uVol7
  %uVol_gep8 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol9 = load double, double* %uVol_gep8, align 8
  %MKKK_P_amt10 = fmul double %MKKK_P_conc, %uVol9
  ret double %MKKK_P_amt10

MKK_block:                                        ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load12 = load double*, double** %FloatingSpeciesAmountsAlias_gep11, align 8
  %MKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load12, i32 2
  %MKK_amt = load double, double* %MKK_amt_gep_gep, align 8
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol14 = load double, double* %uVol_gep13, align 8
  %MKK_conc = fdiv double %MKK_amt, %uVol14
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol16 = load double, double* %uVol_gep15, align 8
  %MKK_amt17 = fmul double %MKK_conc, %uVol16
  ret double %MKK_amt17

MKK_P_block:                                      ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep18 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load19 = load double*, double** %FloatingSpeciesAmountsAlias_gep18, align 8
  %MKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load19, i32 3
  %MKK_P_amt = load double, double* %MKK_P_amt_gep_gep, align 8
  %uVol_gep20 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol21 = load double, double* %uVol_gep20, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %uVol21
  %uVol_gep22 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol23 = load double, double* %uVol_gep22, align 8
  %MKK_P_amt24 = fmul double %MKK_P_conc, %uVol23
  ret double %MKK_P_amt24

MKK_PP_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load26 = load double*, double** %FloatingSpeciesAmountsAlias_gep25, align 8
  %MKK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load26, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_amt_gep_gep, align 8
  %uVol_gep27 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol28 = load double, double* %uVol_gep27, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %uVol28
  %uVol_gep29 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol30 = load double, double* %uVol_gep29, align 8
  %MKK_PP_amt31 = fmul double %MKK_PP_conc, %uVol30
  ret double %MKK_PP_amt31

MAPK_block:                                       ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep32 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load33 = load double*, double** %FloatingSpeciesAmountsAlias_gep32, align 8
  %MAPK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load33, i32 5
  %MAPK_amt = load double, double* %MAPK_amt_gep_gep, align 8
  %uVol_gep34 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol35 = load double, double* %uVol_gep34, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %uVol35
  %uVol_gep36 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol37 = load double, double* %uVol_gep36, align 8
  %MAPK_amt38 = fmul double %MAPK_conc, %uVol37
  ret double %MAPK_amt38

MAPK_P_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep39 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load40 = load double*, double** %FloatingSpeciesAmountsAlias_gep39, align 8
  %MAPK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load40, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_amt_gep_gep, align 8
  %uVol_gep41 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol42 = load double, double* %uVol_gep41, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %uVol42
  %uVol_gep43 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol44 = load double, double* %uVol_gep43, align 8
  %MAPK_P_amt45 = fmul double %MAPK_P_conc, %uVol44
  ret double %MAPK_P_amt45

MAPK_PP_block:                                    ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep46 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load47 = load double*, double** %FloatingSpeciesAmountsAlias_gep46, align 8
  %MAPK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load47, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_amt_gep_gep, align 8
  %uVol_gep48 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol49 = load double, double* %uVol_gep48, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %uVol49
  %uVol_gep50 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol51 = load double, double* %uVol_gep50, align 8
  %MAPK_PP_amt52 = fmul double %MAPK_PP_conc, %uVol51
  ret double %MAPK_PP_amt52
}

2024-01-24 21:49:06 Information: function: define double @getBoundarySpeciesConcentration(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MKK_PP
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_P
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for MAPK_PP
2024-01-24 21:49:06 Information: function: define double @getFloatingSpeciesConcentration(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

MKKK_block:                                       ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  %MKKK_amt = load double, double* %MKKK_amt_gep_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %uVol
  ret double %MKKK_conc

MKKK_P_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load2 = load double*, double** %FloatingSpeciesAmountsAlias_gep1, align 8
  %MKKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load2, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_amt_gep_gep, align 8
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol4 = load double, double* %uVol_gep3, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %uVol4
  ret double %MKKK_P_conc

MKK_block:                                        ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load6 = load double*, double** %FloatingSpeciesAmountsAlias_gep5, align 8
  %MKK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load6, i32 2
  %MKK_amt = load double, double* %MKK_amt_gep_gep, align 8
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol8 = load double, double* %uVol_gep7, align 8
  %MKK_conc = fdiv double %MKK_amt, %uVol8
  ret double %MKK_conc

MKK_P_block:                                      ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load10 = load double*, double** %FloatingSpeciesAmountsAlias_gep9, align 8
  %MKK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load10, i32 3
  %MKK_P_amt = load double, double* %MKK_P_amt_gep_gep, align 8
  %uVol_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol12 = load double, double* %uVol_gep11, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %uVol12
  ret double %MKK_P_conc

MKK_PP_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load14 = load double*, double** %FloatingSpeciesAmountsAlias_gep13, align 8
  %MKK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load14, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_amt_gep_gep, align 8
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol16 = load double, double* %uVol_gep15, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %uVol16
  ret double %MKK_PP_conc

MAPK_block:                                       ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep17 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load18 = load double*, double** %FloatingSpeciesAmountsAlias_gep17, align 8
  %MAPK_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load18, i32 5
  %MAPK_amt = load double, double* %MAPK_amt_gep_gep, align 8
  %uVol_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol20 = load double, double* %uVol_gep19, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %uVol20
  ret double %MAPK_conc

MAPK_P_block:                                     ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load22 = load double*, double** %FloatingSpeciesAmountsAlias_gep21, align 8
  %MAPK_P_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load22, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_amt_gep_gep, align 8
  %uVol_gep23 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol24 = load double, double* %uVol_gep23, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %uVol24
  ret double %MAPK_P_conc

MAPK_PP_block:                                    ; preds = %entry
  %FloatingSpeciesAmountsAlias_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load26 = load double*, double** %FloatingSpeciesAmountsAlias_gep25, align 8
  %MAPK_PP_amt_gep_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load26, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_amt_gep_gep, align 8
  %uVol_gep27 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol28 = load double, double* %uVol_gep27, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %uVol28
  ret double %MAPK_PP_conc
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define double @getCompartmentVolume(%rr_LLVMModelData* %modelData, i32 %compartmentIndex) {
entry:
  switch i32 %compartmentIndex, label %default [
    i32 0, label %uVol_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

uVol_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol_value = load double, double* %uVol_gep, align 8
  ret double %uVol_value
}

2024-01-24 21:49:06 Debug: caching value for J0_K1
2024-01-24 21:49:06 Debug: caching value for J0_n
2024-01-24 21:49:06 Debug: caching value for J0_Ki
2024-01-24 21:49:06 Debug: caching value for J0_V1
2024-01-24 21:49:06 Debug: caching value for J1_KK2
2024-01-24 21:49:06 Debug: caching value for J1_V2
2024-01-24 21:49:06 Debug: caching value for J2_KK3
2024-01-24 21:49:06 Debug: caching value for J2_k3
2024-01-24 21:49:06 Debug: caching value for J3_KK4
2024-01-24 21:49:06 Debug: caching value for J3_k4
2024-01-24 21:49:06 Debug: caching value for J4_KK5
2024-01-24 21:49:06 Debug: caching value for J4_V5
2024-01-24 21:49:06 Debug: caching value for J5_KK6
2024-01-24 21:49:06 Debug: caching value for J5_V6
2024-01-24 21:49:06 Debug: caching value for J6_KK7
2024-01-24 21:49:06 Debug: caching value for J6_k7
2024-01-24 21:49:06 Debug: caching value for J7_KK8
2024-01-24 21:49:06 Debug: caching value for J7_k8
2024-01-24 21:49:06 Debug: caching value for J8_KK9
2024-01-24 21:49:06 Debug: caching value for J8_V9
2024-01-24 21:49:06 Debug: caching value for J9_KK10
2024-01-24 21:49:06 Debug: caching value for J9_V10
2024-01-24 21:49:06 Information: function: define double @getGlobalParameter(%rr_LLVMModelData* %modelData, i32 %globalParameterIndex) {
entry:
  switch i32 %globalParameterIndex, label %default [
    i32 0, label %J0_K1_block
    i32 1, label %J0_n_block
    i32 2, label %J0_Ki_block
    i32 3, label %J0_V1_block
    i32 4, label %J1_KK2_block
    i32 5, label %J1_V2_block
    i32 6, label %J2_KK3_block
    i32 7, label %J2_k3_block
    i32 8, label %J3_KK4_block
    i32 9, label %J3_k4_block
    i32 10, label %J4_KK5_block
    i32 11, label %J4_V5_block
    i32 12, label %J5_KK6_block
    i32 13, label %J5_V6_block
    i32 14, label %J6_KK7_block
    i32 15, label %J6_k7_block
    i32 16, label %J7_KK8_block
    i32 17, label %J7_k8_block
    i32 18, label %J8_KK9_block
    i32 19, label %J8_V9_block
    i32 20, label %J9_KK10_block
    i32 21, label %J9_V10_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

J0_K1_block:                                      ; preds = %entry
  %J0_K1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 0
  %J0_K1_value = load double, double* %J0_K1_gep, align 8
  ret double %J0_K1_value

J0_n_block:                                       ; preds = %entry
  %J0_n_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 1
  %J0_n_value = load double, double* %J0_n_gep, align 8
  ret double %J0_n_value

J0_Ki_block:                                      ; preds = %entry
  %J0_Ki_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 2
  %J0_Ki_value = load double, double* %J0_Ki_gep, align 8
  ret double %J0_Ki_value

J0_V1_block:                                      ; preds = %entry
  %J0_V1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 3
  %J0_V1_value = load double, double* %J0_V1_gep, align 8
  ret double %J0_V1_value

J1_KK2_block:                                     ; preds = %entry
  %J1_KK2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 4
  %J1_KK2_value = load double, double* %J1_KK2_gep, align 8
  ret double %J1_KK2_value

J1_V2_block:                                      ; preds = %entry
  %J1_V2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 5
  %J1_V2_value = load double, double* %J1_V2_gep, align 8
  ret double %J1_V2_value

J2_KK3_block:                                     ; preds = %entry
  %J2_KK3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 6
  %J2_KK3_value = load double, double* %J2_KK3_gep, align 8
  ret double %J2_KK3_value

J2_k3_block:                                      ; preds = %entry
  %J2_k3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 7
  %J2_k3_value = load double, double* %J2_k3_gep, align 8
  ret double %J2_k3_value

J3_KK4_block:                                     ; preds = %entry
  %J3_KK4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 8
  %J3_KK4_value = load double, double* %J3_KK4_gep, align 8
  ret double %J3_KK4_value

J3_k4_block:                                      ; preds = %entry
  %J3_k4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 9
  %J3_k4_value = load double, double* %J3_k4_gep, align 8
  ret double %J3_k4_value

J4_KK5_block:                                     ; preds = %entry
  %J4_KK5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 10
  %J4_KK5_value = load double, double* %J4_KK5_gep, align 8
  ret double %J4_KK5_value

J4_V5_block:                                      ; preds = %entry
  %J4_V5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 11
  %J4_V5_value = load double, double* %J4_V5_gep, align 8
  ret double %J4_V5_value

J5_KK6_block:                                     ; preds = %entry
  %J5_KK6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 12
  %J5_KK6_value = load double, double* %J5_KK6_gep, align 8
  ret double %J5_KK6_value

J5_V6_block:                                      ; preds = %entry
  %J5_V6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 13
  %J5_V6_value = load double, double* %J5_V6_gep, align 8
  ret double %J5_V6_value

J6_KK7_block:                                     ; preds = %entry
  %J6_KK7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 14
  %J6_KK7_value = load double, double* %J6_KK7_gep, align 8
  ret double %J6_KK7_value

J6_k7_block:                                      ; preds = %entry
  %J6_k7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 15
  %J6_k7_value = load double, double* %J6_k7_gep, align 8
  ret double %J6_k7_value

J7_KK8_block:                                     ; preds = %entry
  %J7_KK8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 16
  %J7_KK8_value = load double, double* %J7_KK8_gep, align 8
  ret double %J7_KK8_value

J7_k8_block:                                      ; preds = %entry
  %J7_k8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 17
  %J7_k8_value = load double, double* %J7_k8_gep, align 8
  ret double %J7_k8_value

J8_KK9_block:                                     ; preds = %entry
  %J8_KK9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 18
  %J8_KK9_value = load double, double* %J8_KK9_gep, align 8
  ret double %J8_KK9_value

J8_V9_block:                                      ; preds = %entry
  %J8_V9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 19
  %J8_V9_value = load double, double* %J8_V9_gep, align 8
  ret double %J8_V9_value

J9_KK10_block:                                    ; preds = %entry
  %J9_KK10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 20
  %J9_KK10_value = load double, double* %J9_KK10_gep, align 8
  ret double %J9_KK10_value

J9_V10_block:                                     ; preds = %entry
  %J9_V10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 21
  %J9_V10_value = load double, double* %J9_V10_gep, align 8
  ret double %J9_V10_value
}

2024-01-24 21:49:06 Information: function: define void @evalRateRuleRates(%rr_LLVMModelData* %modelData) {
entry:
  ret void
}

2024-01-24 21:49:06 Information: function: define i8 @getEventTrigger(%rr_LLVMModelData* %modelData, i32 %triggerIndx) {
entry:
  switch i32 %triggerIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 -1
}

2024-01-24 21:49:06 Information: function: define double @getEventPriority(%rr_LLVMModelData* %modelData, i32 %priorityIndx) {
entry:
  switch i32 %priorityIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret double 1.234560e+02
}

2024-01-24 21:49:06 Information: function: define double @getEventDelay(%rr_LLVMModelData* %modelData, i32 %delayIndx) {
entry:
  switch i32 %delayIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret double 1.234560e+02
}

2024-01-24 21:49:06 Information: function: define void @eventTrigger(%rr_LLVMModelData* %modelData, i32 %eventIndx, double* %data) {
entry:
  switch i32 %eventIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret void
}

2024-01-24 21:49:06 Information: function: define void @eventAssign(%rr_LLVMModelData* %modelData, i32 %eventIndx, double* %data) {
entry:
  switch i32 %eventIndx, label %default [
  ]

default:                                          ; preds = %entry
  ret void
}

2024-01-24 21:49:06 Information: function: define void @evalVolatileStoich(%rr_LLVMModelData* %modelData) {
entry:
  ret void
}

2024-01-24 21:49:06 Information: function: define void @evalConversionFactor(%rr_LLVMModelData* %modelData) {
entry:
  ret void
}

2024-01-24 21:49:06 Information: function: define i8 @setBoundarySpeciesAmount(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex, double %value) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Information: function: define i8 @setBoundarySpeciesConcentration(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex, double %value) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define i8 @setFloatingSpeciesConcentration(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex, double %value) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret i8 0

MKKK_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %MKKK_amt = fmul double %value, %uVol
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  store double %MKKK_amt, double* %MKKK_gep, align 8
  ret i8 1

MKKK_P_block:                                     ; preds = %entry
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol2 = load double, double* %uVol_gep1, align 8
  %MKKK_P_amt = fmul double %value, %uVol2
  %FloatingSpeciesAmountsAlias_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load4 = load double*, double** %FloatingSpeciesAmountsAlias_gep3, align 8
  %MKKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load4, i32 1
  store double %MKKK_P_amt, double* %MKKK_P_gep, align 8
  ret i8 1

MKK_block:                                        ; preds = %entry
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol6 = load double, double* %uVol_gep5, align 8
  %MKK_amt = fmul double %value, %uVol6
  %FloatingSpeciesAmountsAlias_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load8 = load double*, double** %FloatingSpeciesAmountsAlias_gep7, align 8
  %MKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load8, i32 2
  store double %MKK_amt, double* %MKK_gep, align 8
  ret i8 1

MKK_P_block:                                      ; preds = %entry
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol10 = load double, double* %uVol_gep9, align 8
  %MKK_P_amt = fmul double %value, %uVol10
  %FloatingSpeciesAmountsAlias_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load12 = load double*, double** %FloatingSpeciesAmountsAlias_gep11, align 8
  %MKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load12, i32 3
  store double %MKK_P_amt, double* %MKK_P_gep, align 8
  ret i8 1

MKK_PP_block:                                     ; preds = %entry
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol14 = load double, double* %uVol_gep13, align 8
  %MKK_PP_amt = fmul double %value, %uVol14
  %FloatingSpeciesAmountsAlias_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load16 = load double*, double** %FloatingSpeciesAmountsAlias_gep15, align 8
  %MKK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load16, i32 4
  store double %MKK_PP_amt, double* %MKK_PP_gep, align 8
  ret i8 1

MAPK_block:                                       ; preds = %entry
  %uVol_gep17 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol18 = load double, double* %uVol_gep17, align 8
  %MAPK_amt = fmul double %value, %uVol18
  %FloatingSpeciesAmountsAlias_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load20 = load double*, double** %FloatingSpeciesAmountsAlias_gep19, align 8
  %MAPK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load20, i32 5
  store double %MAPK_amt, double* %MAPK_gep, align 8
  ret i8 1

MAPK_P_block:                                     ; preds = %entry
  %uVol_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol22 = load double, double* %uVol_gep21, align 8
  %MAPK_P_amt = fmul double %value, %uVol22
  %FloatingSpeciesAmountsAlias_gep23 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load24 = load double*, double** %FloatingSpeciesAmountsAlias_gep23, align 8
  %MAPK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load24, i32 6
  store double %MAPK_P_amt, double* %MAPK_P_gep, align 8
  ret i8 1

MAPK_PP_block:                                    ; preds = %entry
  %uVol_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol26 = load double, double* %uVol_gep25, align 8
  %MAPK_PP_amt = fmul double %value, %uVol26
  %FloatingSpeciesAmountsAlias_gep27 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load28 = load double*, double** %FloatingSpeciesAmountsAlias_gep27, align 8
  %MAPK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load28, i32 7
  store double %MAPK_PP_amt, double* %MAPK_PP_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define i8 @setCompartmentVolume(%rr_LLVMModelData* %modelData, i32 %compartmentIndex, double %value) {
entry:
  switch i32 %compartmentIndex, label %default [
    i32 0, label %uVol_block
  ]

default:                                          ; preds = %entry
  ret i8 0

uVol_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  store double %value, double* %uVol_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Debug: caching value for uVol
2024-01-24 21:49:06 Information: function: define i8 @setFloatingSpeciesAmount(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex, double %value) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret i8 0

MKKK_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol = load double, double* %uVol_gep, align 8
  %MKKK_value_conc = fdiv double %value, %uVol
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol2 = load double, double* %uVol_gep1, align 8
  %MKKK_amt = fmul double %MKKK_value_conc, %uVol2
  %FloatingSpeciesAmountsAlias_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load = load double*, double** %FloatingSpeciesAmountsAlias_gep, align 8
  %MKKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load, i32 0
  store double %MKKK_amt, double* %MKKK_gep, align 8
  ret i8 1

MKKK_P_block:                                     ; preds = %entry
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol4 = load double, double* %uVol_gep3, align 8
  %MKKK_P_value_conc = fdiv double %value, %uVol4
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol6 = load double, double* %uVol_gep5, align 8
  %MKKK_P_amt = fmul double %MKKK_P_value_conc, %uVol6
  %FloatingSpeciesAmountsAlias_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load8 = load double*, double** %FloatingSpeciesAmountsAlias_gep7, align 8
  %MKKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load8, i32 1
  store double %MKKK_P_amt, double* %MKKK_P_gep, align 8
  ret i8 1

MKK_block:                                        ; preds = %entry
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol10 = load double, double* %uVol_gep9, align 8
  %MKK_value_conc = fdiv double %value, %uVol10
  %uVol_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol12 = load double, double* %uVol_gep11, align 8
  %MKK_amt = fmul double %MKK_value_conc, %uVol12
  %FloatingSpeciesAmountsAlias_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load14 = load double*, double** %FloatingSpeciesAmountsAlias_gep13, align 8
  %MKK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load14, i32 2
  store double %MKK_amt, double* %MKK_gep, align 8
  ret i8 1

MKK_P_block:                                      ; preds = %entry
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol16 = load double, double* %uVol_gep15, align 8
  %MKK_P_value_conc = fdiv double %value, %uVol16
  %uVol_gep17 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol18 = load double, double* %uVol_gep17, align 8
  %MKK_P_amt = fmul double %MKK_P_value_conc, %uVol18
  %FloatingSpeciesAmountsAlias_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load20 = load double*, double** %FloatingSpeciesAmountsAlias_gep19, align 8
  %MKK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load20, i32 3
  store double %MKK_P_amt, double* %MKK_P_gep, align 8
  ret i8 1

MKK_PP_block:                                     ; preds = %entry
  %uVol_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol22 = load double, double* %uVol_gep21, align 8
  %MKK_PP_value_conc = fdiv double %value, %uVol22
  %uVol_gep23 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol24 = load double, double* %uVol_gep23, align 8
  %MKK_PP_amt = fmul double %MKK_PP_value_conc, %uVol24
  %FloatingSpeciesAmountsAlias_gep25 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load26 = load double*, double** %FloatingSpeciesAmountsAlias_gep25, align 8
  %MKK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load26, i32 4
  store double %MKK_PP_amt, double* %MKK_PP_gep, align 8
  ret i8 1

MAPK_block:                                       ; preds = %entry
  %uVol_gep27 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol28 = load double, double* %uVol_gep27, align 8
  %MAPK_value_conc = fdiv double %value, %uVol28
  %uVol_gep29 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol30 = load double, double* %uVol_gep29, align 8
  %MAPK_amt = fmul double %MAPK_value_conc, %uVol30
  %FloatingSpeciesAmountsAlias_gep31 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load32 = load double*, double** %FloatingSpeciesAmountsAlias_gep31, align 8
  %MAPK_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load32, i32 5
  store double %MAPK_amt, double* %MAPK_gep, align 8
  ret i8 1

MAPK_P_block:                                     ; preds = %entry
  %uVol_gep33 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol34 = load double, double* %uVol_gep33, align 8
  %MAPK_P_value_conc = fdiv double %value, %uVol34
  %uVol_gep35 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol36 = load double, double* %uVol_gep35, align 8
  %MAPK_P_amt = fmul double %MAPK_P_value_conc, %uVol36
  %FloatingSpeciesAmountsAlias_gep37 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load38 = load double*, double** %FloatingSpeciesAmountsAlias_gep37, align 8
  %MAPK_P_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load38, i32 6
  store double %MAPK_P_amt, double* %MAPK_P_gep, align 8
  ret i8 1

MAPK_PP_block:                                    ; preds = %entry
  %uVol_gep39 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol40 = load double, double* %uVol_gep39, align 8
  %MAPK_PP_value_conc = fdiv double %value, %uVol40
  %uVol_gep41 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 31, i32 0
  %uVol42 = load double, double* %uVol_gep41, align 8
  %MAPK_PP_amt = fmul double %MAPK_PP_value_conc, %uVol42
  %FloatingSpeciesAmountsAlias_gep43 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 30
  %FloatingSpeciesAmountsAlias_load44 = load double*, double** %FloatingSpeciesAmountsAlias_gep43, align 8
  %MAPK_PP_gep = getelementptr double, double* %FloatingSpeciesAmountsAlias_load44, i32 7
  store double %MAPK_PP_amt, double* %MAPK_PP_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define i8 @setGlobalParameter(%rr_LLVMModelData* %modelData, i32 %globalParameterIndex, double %value) {
entry:
  switch i32 %globalParameterIndex, label %default [
    i32 0, label %J0_K1_block
    i32 1, label %J0_n_block
    i32 2, label %J0_Ki_block
    i32 3, label %J0_V1_block
    i32 4, label %J1_KK2_block
    i32 5, label %J1_V2_block
    i32 6, label %J2_KK3_block
    i32 7, label %J2_k3_block
    i32 8, label %J3_KK4_block
    i32 9, label %J3_k4_block
    i32 10, label %J4_KK5_block
    i32 11, label %J4_V5_block
    i32 12, label %J5_KK6_block
    i32 13, label %J5_V6_block
    i32 14, label %J6_KK7_block
    i32 15, label %J6_k7_block
    i32 16, label %J7_KK8_block
    i32 17, label %J7_k8_block
    i32 18, label %J8_KK9_block
    i32 19, label %J8_V9_block
    i32 20, label %J9_KK10_block
    i32 21, label %J9_V10_block
  ]

default:                                          ; preds = %entry
  ret i8 0

J0_K1_block:                                      ; preds = %entry
  %J0_K1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 0
  store double %value, double* %J0_K1_gep, align 8
  ret i8 1

J0_n_block:                                       ; preds = %entry
  %J0_n_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 1
  store double %value, double* %J0_n_gep, align 8
  ret i8 1

J0_Ki_block:                                      ; preds = %entry
  %J0_Ki_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 2
  store double %value, double* %J0_Ki_gep, align 8
  ret i8 1

J0_V1_block:                                      ; preds = %entry
  %J0_V1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 3
  store double %value, double* %J0_V1_gep, align 8
  ret i8 1

J1_KK2_block:                                     ; preds = %entry
  %J1_KK2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 4
  store double %value, double* %J1_KK2_gep, align 8
  ret i8 1

J1_V2_block:                                      ; preds = %entry
  %J1_V2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 5
  store double %value, double* %J1_V2_gep, align 8
  ret i8 1

J2_KK3_block:                                     ; preds = %entry
  %J2_KK3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 6
  store double %value, double* %J2_KK3_gep, align 8
  ret i8 1

J2_k3_block:                                      ; preds = %entry
  %J2_k3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 7
  store double %value, double* %J2_k3_gep, align 8
  ret i8 1

J3_KK4_block:                                     ; preds = %entry
  %J3_KK4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 8
  store double %value, double* %J3_KK4_gep, align 8
  ret i8 1

J3_k4_block:                                      ; preds = %entry
  %J3_k4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 9
  store double %value, double* %J3_k4_gep, align 8
  ret i8 1

J4_KK5_block:                                     ; preds = %entry
  %J4_KK5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 10
  store double %value, double* %J4_KK5_gep, align 8
  ret i8 1

J4_V5_block:                                      ; preds = %entry
  %J4_V5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 11
  store double %value, double* %J4_V5_gep, align 8
  ret i8 1

J5_KK6_block:                                     ; preds = %entry
  %J5_KK6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 12
  store double %value, double* %J5_KK6_gep, align 8
  ret i8 1

J5_V6_block:                                      ; preds = %entry
  %J5_V6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 13
  store double %value, double* %J5_V6_gep, align 8
  ret i8 1

J6_KK7_block:                                     ; preds = %entry
  %J6_KK7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 14
  store double %value, double* %J6_KK7_gep, align 8
  ret i8 1

J6_k7_block:                                      ; preds = %entry
  %J6_k7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 15
  store double %value, double* %J6_k7_gep, align 8
  ret i8 1

J7_KK8_block:                                     ; preds = %entry
  %J7_KK8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 16
  store double %value, double* %J7_KK8_gep, align 8
  ret i8 1

J7_k8_block:                                      ; preds = %entry
  %J7_k8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 17
  store double %value, double* %J7_k8_gep, align 8
  ret i8 1

J8_KK9_block:                                     ; preds = %entry
  %J8_KK9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 18
  store double %value, double* %J8_KK9_gep, align 8
  ret i8 1

J8_V9_block:                                      ; preds = %entry
  %J8_V9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 19
  store double %value, double* %J8_V9_gep, align 8
  ret i8 1

J9_KK10_block:                                    ; preds = %entry
  %J9_KK10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 20
  store double %value, double* %J9_KK10_gep, align 8
  ret i8 1

J9_V10_block:                                     ; preds = %entry
  %J9_V10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 36, i32 21
  store double %value, double* %J9_V10_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define double @getFloatingSpeciesInitConcentrations(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

MKKK_block:                                       ; preds = %entry
  %MKKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  %MKKK_amt = load double, double* %MKKK_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %0 = load double, double* %uVol_gep, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %0
  ret double %MKKK_conc

MKKK_P_block:                                     ; preds = %entry
  %MKKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_gep, align 8
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %1 = load double, double* %uVol_gep1, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %1
  ret double %MKKK_P_conc

MKK_block:                                        ; preds = %entry
  %MKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  %MKK_amt = load double, double* %MKK_gep, align 8
  %uVol_gep2 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %2 = load double, double* %uVol_gep2, align 8
  %MKK_conc = fdiv double %MKK_amt, %2
  ret double %MKK_conc

MKK_P_block:                                      ; preds = %entry
  %MKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  %MKK_P_amt = load double, double* %MKK_P_gep, align 8
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %3 = load double, double* %uVol_gep3, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %3
  ret double %MKK_P_conc

MKK_PP_block:                                     ; preds = %entry
  %MKK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_gep, align 8
  %uVol_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %4 = load double, double* %uVol_gep4, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %4
  ret double %MKK_PP_conc

MAPK_block:                                       ; preds = %entry
  %MAPK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  %MAPK_amt = load double, double* %MAPK_gep, align 8
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %5 = load double, double* %uVol_gep5, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %5
  ret double %MAPK_conc

MAPK_P_block:                                     ; preds = %entry
  %MAPK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_gep, align 8
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %6 = load double, double* %uVol_gep6, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %6
  ret double %MAPK_P_conc

MAPK_PP_block:                                    ; preds = %entry
  %MAPK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_gep, align 8
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %7 = load double, double* %uVol_gep7, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %7
  ret double %MAPK_PP_conc
}

2024-01-24 21:49:06 Information: function: define i8 @setFloatingSpeciesInitConcentrations(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex, double %value) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret i8 0

MKKK_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %0 = load double, double* %uVol_gep, align 8
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %1 = load double, double* %uVol_gep1, align 8
  %MKKK_amt = fmul double %value, %1
  %MKKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  store double %MKKK_amt, double* %MKKK_gep, align 8
  ret i8 1

MKKK_P_block:                                     ; preds = %entry
  %uVol_gep2 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %2 = load double, double* %uVol_gep2, align 8
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %3 = load double, double* %uVol_gep3, align 8
  %MKKK_P_amt = fmul double %value, %3
  %MKKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  store double %MKKK_P_amt, double* %MKKK_P_gep, align 8
  ret i8 1

MKK_block:                                        ; preds = %entry
  %uVol_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %4 = load double, double* %uVol_gep4, align 8
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %5 = load double, double* %uVol_gep5, align 8
  %MKK_amt = fmul double %value, %5
  %MKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  store double %MKK_amt, double* %MKK_gep, align 8
  ret i8 1

MKK_P_block:                                      ; preds = %entry
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %6 = load double, double* %uVol_gep6, align 8
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %7 = load double, double* %uVol_gep7, align 8
  %MKK_P_amt = fmul double %value, %7
  %MKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  store double %MKK_P_amt, double* %MKK_P_gep, align 8
  ret i8 1

MKK_PP_block:                                     ; preds = %entry
  %uVol_gep8 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %8 = load double, double* %uVol_gep8, align 8
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %9 = load double, double* %uVol_gep9, align 8
  %MKK_PP_amt = fmul double %value, %9
  %MKK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  store double %MKK_PP_amt, double* %MKK_PP_gep, align 8
  ret i8 1

MAPK_block:                                       ; preds = %entry
  %uVol_gep10 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %10 = load double, double* %uVol_gep10, align 8
  %uVol_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %11 = load double, double* %uVol_gep11, align 8
  %MAPK_amt = fmul double %value, %11
  %MAPK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  store double %MAPK_amt, double* %MAPK_gep, align 8
  ret i8 1

MAPK_P_block:                                     ; preds = %entry
  %uVol_gep12 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %12 = load double, double* %uVol_gep12, align 8
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %13 = load double, double* %uVol_gep13, align 8
  %MAPK_P_amt = fmul double %value, %13
  %MAPK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  store double %MAPK_P_amt, double* %MAPK_P_gep, align 8
  ret i8 1

MAPK_PP_block:                                    ; preds = %entry
  %uVol_gep14 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %14 = load double, double* %uVol_gep14, align 8
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %15 = load double, double* %uVol_gep15, align 8
  %MAPK_PP_amt = fmul double %value, %15
  %MAPK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  store double %MAPK_PP_amt, double* %MAPK_PP_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define double @getFloatingSpeciesInitAmounts(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

MKKK_block:                                       ; preds = %entry
  %MKKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  %MKKK_amt = load double, double* %MKKK_gep, align 8
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %0 = load double, double* %uVol_gep, align 8
  %MKKK_conc = fdiv double %MKKK_amt, %0
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %1 = load double, double* %uVol_gep1, align 8
  %MKKK_amt2 = fmul double %MKKK_conc, %1
  ret double %MKKK_amt2

MKKK_P_block:                                     ; preds = %entry
  %MKKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  %MKKK_P_amt = load double, double* %MKKK_P_gep, align 8
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %2 = load double, double* %uVol_gep3, align 8
  %MKKK_P_conc = fdiv double %MKKK_P_amt, %2
  %uVol_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %3 = load double, double* %uVol_gep4, align 8
  %MKKK_P_amt5 = fmul double %MKKK_P_conc, %3
  ret double %MKKK_P_amt5

MKK_block:                                        ; preds = %entry
  %MKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  %MKK_amt = load double, double* %MKK_gep, align 8
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %4 = load double, double* %uVol_gep6, align 8
  %MKK_conc = fdiv double %MKK_amt, %4
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %5 = load double, double* %uVol_gep7, align 8
  %MKK_amt8 = fmul double %MKK_conc, %5
  ret double %MKK_amt8

MKK_P_block:                                      ; preds = %entry
  %MKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  %MKK_P_amt = load double, double* %MKK_P_gep, align 8
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %6 = load double, double* %uVol_gep9, align 8
  %MKK_P_conc = fdiv double %MKK_P_amt, %6
  %uVol_gep10 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %7 = load double, double* %uVol_gep10, align 8
  %MKK_P_amt11 = fmul double %MKK_P_conc, %7
  ret double %MKK_P_amt11

MKK_PP_block:                                     ; preds = %entry
  %MKK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  %MKK_PP_amt = load double, double* %MKK_PP_gep, align 8
  %uVol_gep12 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %8 = load double, double* %uVol_gep12, align 8
  %MKK_PP_conc = fdiv double %MKK_PP_amt, %8
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %9 = load double, double* %uVol_gep13, align 8
  %MKK_PP_amt14 = fmul double %MKK_PP_conc, %9
  ret double %MKK_PP_amt14

MAPK_block:                                       ; preds = %entry
  %MAPK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  %MAPK_amt = load double, double* %MAPK_gep, align 8
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %10 = load double, double* %uVol_gep15, align 8
  %MAPK_conc = fdiv double %MAPK_amt, %10
  %uVol_gep16 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %11 = load double, double* %uVol_gep16, align 8
  %MAPK_amt17 = fmul double %MAPK_conc, %11
  ret double %MAPK_amt17

MAPK_P_block:                                     ; preds = %entry
  %MAPK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  %MAPK_P_amt = load double, double* %MAPK_P_gep, align 8
  %uVol_gep18 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %12 = load double, double* %uVol_gep18, align 8
  %MAPK_P_conc = fdiv double %MAPK_P_amt, %12
  %uVol_gep19 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %13 = load double, double* %uVol_gep19, align 8
  %MAPK_P_amt20 = fmul double %MAPK_P_conc, %13
  ret double %MAPK_P_amt20

MAPK_PP_block:                                    ; preds = %entry
  %MAPK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  %MAPK_PP_amt = load double, double* %MAPK_PP_gep, align 8
  %uVol_gep21 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %14 = load double, double* %uVol_gep21, align 8
  %MAPK_PP_conc = fdiv double %MAPK_PP_amt, %14
  %uVol_gep22 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %15 = load double, double* %uVol_gep22, align 8
  %MAPK_PP_amt23 = fmul double %MAPK_PP_conc, %15
  ret double %MAPK_PP_amt23
}

2024-01-24 21:49:06 Information: function: define i8 @setFloatingSpeciesInitAmounts(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex, double %value) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
    i32 0, label %MKKK_block
    i32 1, label %MKKK_P_block
    i32 2, label %MKK_block
    i32 3, label %MKK_P_block
    i32 4, label %MKK_PP_block
    i32 5, label %MAPK_block
    i32 6, label %MAPK_P_block
    i32 7, label %MAPK_PP_block
  ]

default:                                          ; preds = %entry
  ret i8 0

MKKK_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %0 = load double, double* %uVol_gep, align 8
  %MKKK_value_conc = fdiv double %value, %0
  %uVol_gep1 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %1 = load double, double* %uVol_gep1, align 8
  %MKKK_amt = fmul double %MKKK_value_conc, %1
  %MKKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 0
  store double %MKKK_amt, double* %MKKK_gep, align 8
  ret i8 1

MKKK_P_block:                                     ; preds = %entry
  %uVol_gep2 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %2 = load double, double* %uVol_gep2, align 8
  %MKKK_P_value_conc = fdiv double %value, %2
  %uVol_gep3 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %3 = load double, double* %uVol_gep3, align 8
  %MKKK_P_amt = fmul double %MKKK_P_value_conc, %3
  %MKKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 1
  store double %MKKK_P_amt, double* %MKKK_P_gep, align 8
  ret i8 1

MKK_block:                                        ; preds = %entry
  %uVol_gep4 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %4 = load double, double* %uVol_gep4, align 8
  %MKK_value_conc = fdiv double %value, %4
  %uVol_gep5 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %5 = load double, double* %uVol_gep5, align 8
  %MKK_amt = fmul double %MKK_value_conc, %5
  %MKK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 2
  store double %MKK_amt, double* %MKK_gep, align 8
  ret i8 1

MKK_P_block:                                      ; preds = %entry
  %uVol_gep6 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %6 = load double, double* %uVol_gep6, align 8
  %MKK_P_value_conc = fdiv double %value, %6
  %uVol_gep7 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %7 = load double, double* %uVol_gep7, align 8
  %MKK_P_amt = fmul double %MKK_P_value_conc, %7
  %MKK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 3
  store double %MKK_P_amt, double* %MKK_P_gep, align 8
  ret i8 1

MKK_PP_block:                                     ; preds = %entry
  %uVol_gep8 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %8 = load double, double* %uVol_gep8, align 8
  %MKK_PP_value_conc = fdiv double %value, %8
  %uVol_gep9 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %9 = load double, double* %uVol_gep9, align 8
  %MKK_PP_amt = fmul double %MKK_PP_value_conc, %9
  %MKK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 4
  store double %MKK_PP_amt, double* %MKK_PP_gep, align 8
  ret i8 1

MAPK_block:                                       ; preds = %entry
  %uVol_gep10 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %10 = load double, double* %uVol_gep10, align 8
  %MAPK_value_conc = fdiv double %value, %10
  %uVol_gep11 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %11 = load double, double* %uVol_gep11, align 8
  %MAPK_amt = fmul double %MAPK_value_conc, %11
  %MAPK_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 5
  store double %MAPK_amt, double* %MAPK_gep, align 8
  ret i8 1

MAPK_P_block:                                     ; preds = %entry
  %uVol_gep12 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %12 = load double, double* %uVol_gep12, align 8
  %MAPK_P_value_conc = fdiv double %value, %12
  %uVol_gep13 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %13 = load double, double* %uVol_gep13, align 8
  %MAPK_P_amt = fmul double %MAPK_P_value_conc, %13
  %MAPK_P_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 6
  store double %MAPK_P_amt, double* %MAPK_P_gep, align 8
  ret i8 1

MAPK_PP_block:                                    ; preds = %entry
  %uVol_gep14 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %14 = load double, double* %uVol_gep14, align 8
  %MAPK_PP_value_conc = fdiv double %value, %14
  %uVol_gep15 = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %15 = load double, double* %uVol_gep15, align 8
  %MAPK_PP_amt = fmul double %MAPK_PP_value_conc, %15
  %MAPK_PP_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 33, i32 7
  store double %MAPK_PP_amt, double* %MAPK_PP_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define double @getBoundarySpeciesInitConcentrations(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Information: function: define i8 @setBoundarySpeciesInitConcentrations(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex, double %value) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Information: function: define double @getBoundarySpeciesInitAmounts(%rr_LLVMModelData* %modelData, i32 %floatingSpeciesIndex) {
entry:
  switch i32 %floatingSpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000
}

2024-01-24 21:49:06 Information: function: define i8 @setBoundarySpeciesInitAmounts(%rr_LLVMModelData* %modelData, i32 %boundarySpeciesIndex, double %value) {
entry:
  switch i32 %boundarySpeciesIndex, label %default [
  ]

default:                                          ; preds = %entry
  ret i8 0
}

2024-01-24 21:49:06 Information: function: define double @getCompartmentInitVolumes(%rr_LLVMModelData* %modelData, i32 %compartmentIndex) {
entry:
  switch i32 %compartmentIndex, label %default [
    i32 0, label %uVol_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

uVol_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  %uVol_value = load double, double* %uVol_gep, align 8
  ret double %uVol_value
}

2024-01-24 21:49:06 Information: function: define i8 @setCompartmentInitVolumes(%rr_LLVMModelData* %modelData, i32 %compartmentIndex, double %value) {
entry:
  switch i32 %compartmentIndex, label %default [
    i32 0, label %uVol_block
  ]

default:                                          ; preds = %entry
  ret i8 0

uVol_block:                                       ; preds = %entry
  %uVol_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 32, i32 0
  store double %value, double* %uVol_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Information: function: define double @getGlobalParameterInitValue(%rr_LLVMModelData* %modelData, i32 %globalParameterIndex) {
entry:
  switch i32 %globalParameterIndex, label %default [
    i32 0, label %J0_K1_block
    i32 1, label %J0_n_block
    i32 2, label %J0_Ki_block
    i32 3, label %J0_V1_block
    i32 4, label %J1_KK2_block
    i32 5, label %J1_V2_block
    i32 6, label %J2_KK3_block
    i32 7, label %J2_k3_block
    i32 8, label %J3_KK4_block
    i32 9, label %J3_k4_block
    i32 10, label %J4_KK5_block
    i32 11, label %J4_V5_block
    i32 12, label %J5_KK6_block
    i32 13, label %J5_V6_block
    i32 14, label %J6_KK7_block
    i32 15, label %J6_k7_block
    i32 16, label %J7_KK8_block
    i32 17, label %J7_k8_block
    i32 18, label %J8_KK9_block
    i32 19, label %J8_V9_block
    i32 20, label %J9_KK10_block
    i32 21, label %J9_V10_block
  ]

default:                                          ; preds = %entry
  ret double 0x7FF8000000000000

J0_K1_block:                                      ; preds = %entry
  %J0_K1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 0
  %J0_K1_value = load double, double* %J0_K1_gep, align 8
  ret double %J0_K1_value

J0_n_block:                                       ; preds = %entry
  %J0_n_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 1
  %J0_n_value = load double, double* %J0_n_gep, align 8
  ret double %J0_n_value

J0_Ki_block:                                      ; preds = %entry
  %J0_Ki_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 2
  %J0_Ki_value = load double, double* %J0_Ki_gep, align 8
  ret double %J0_Ki_value

J0_V1_block:                                      ; preds = %entry
  %J0_V1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 3
  %J0_V1_value = load double, double* %J0_V1_gep, align 8
  ret double %J0_V1_value

J1_KK2_block:                                     ; preds = %entry
  %J1_KK2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 4
  %J1_KK2_value = load double, double* %J1_KK2_gep, align 8
  ret double %J1_KK2_value

J1_V2_block:                                      ; preds = %entry
  %J1_V2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 5
  %J1_V2_value = load double, double* %J1_V2_gep, align 8
  ret double %J1_V2_value

J2_KK3_block:                                     ; preds = %entry
  %J2_KK3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 6
  %J2_KK3_value = load double, double* %J2_KK3_gep, align 8
  ret double %J2_KK3_value

J2_k3_block:                                      ; preds = %entry
  %J2_k3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 7
  %J2_k3_value = load double, double* %J2_k3_gep, align 8
  ret double %J2_k3_value

J3_KK4_block:                                     ; preds = %entry
  %J3_KK4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 8
  %J3_KK4_value = load double, double* %J3_KK4_gep, align 8
  ret double %J3_KK4_value

J3_k4_block:                                      ; preds = %entry
  %J3_k4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 9
  %J3_k4_value = load double, double* %J3_k4_gep, align 8
  ret double %J3_k4_value

J4_KK5_block:                                     ; preds = %entry
  %J4_KK5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 10
  %J4_KK5_value = load double, double* %J4_KK5_gep, align 8
  ret double %J4_KK5_value

J4_V5_block:                                      ; preds = %entry
  %J4_V5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 11
  %J4_V5_value = load double, double* %J4_V5_gep, align 8
  ret double %J4_V5_value

J5_KK6_block:                                     ; preds = %entry
  %J5_KK6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 12
  %J5_KK6_value = load double, double* %J5_KK6_gep, align 8
  ret double %J5_KK6_value

J5_V6_block:                                      ; preds = %entry
  %J5_V6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 13
  %J5_V6_value = load double, double* %J5_V6_gep, align 8
  ret double %J5_V6_value

J6_KK7_block:                                     ; preds = %entry
  %J6_KK7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 14
  %J6_KK7_value = load double, double* %J6_KK7_gep, align 8
  ret double %J6_KK7_value

J6_k7_block:                                      ; preds = %entry
  %J6_k7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 15
  %J6_k7_value = load double, double* %J6_k7_gep, align 8
  ret double %J6_k7_value

J7_KK8_block:                                     ; preds = %entry
  %J7_KK8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 16
  %J7_KK8_value = load double, double* %J7_KK8_gep, align 8
  ret double %J7_KK8_value

J7_k8_block:                                      ; preds = %entry
  %J7_k8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 17
  %J7_k8_value = load double, double* %J7_k8_gep, align 8
  ret double %J7_k8_value

J8_KK9_block:                                     ; preds = %entry
  %J8_KK9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 18
  %J8_KK9_value = load double, double* %J8_KK9_gep, align 8
  ret double %J8_KK9_value

J8_V9_block:                                      ; preds = %entry
  %J8_V9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 19
  %J8_V9_value = load double, double* %J8_V9_gep, align 8
  ret double %J8_V9_value

J9_KK10_block:                                    ; preds = %entry
  %J9_KK10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 20
  %J9_KK10_value = load double, double* %J9_KK10_gep, align 8
  ret double %J9_KK10_value

J9_V10_block:                                     ; preds = %entry
  %J9_V10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 21
  %J9_V10_value = load double, double* %J9_V10_gep, align 8
  ret double %J9_V10_value
}

2024-01-24 21:49:06 Information: function: define i8 @setGlobalParameterInitValue(%rr_LLVMModelData* %modelData, i32 %globalParameterIndex, double %value) {
entry:
  switch i32 %globalParameterIndex, label %default [
    i32 0, label %J0_K1_block
    i32 1, label %J0_n_block
    i32 2, label %J0_Ki_block
    i32 3, label %J0_V1_block
    i32 4, label %J1_KK2_block
    i32 5, label %J1_V2_block
    i32 6, label %J2_KK3_block
    i32 7, label %J2_k3_block
    i32 8, label %J3_KK4_block
    i32 9, label %J3_k4_block
    i32 10, label %J4_KK5_block
    i32 11, label %J4_V5_block
    i32 12, label %J5_KK6_block
    i32 13, label %J5_V6_block
    i32 14, label %J6_KK7_block
    i32 15, label %J6_k7_block
    i32 16, label %J7_KK8_block
    i32 17, label %J7_k8_block
    i32 18, label %J8_KK9_block
    i32 19, label %J8_V9_block
    i32 20, label %J9_KK10_block
    i32 21, label %J9_V10_block
  ]

default:                                          ; preds = %entry
  ret i8 0

J0_K1_block:                                      ; preds = %entry
  %J0_K1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 0
  store double %value, double* %J0_K1_gep, align 8
  ret i8 1

J0_n_block:                                       ; preds = %entry
  %J0_n_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 1
  store double %value, double* %J0_n_gep, align 8
  ret i8 1

J0_Ki_block:                                      ; preds = %entry
  %J0_Ki_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 2
  store double %value, double* %J0_Ki_gep, align 8
  ret i8 1

J0_V1_block:                                      ; preds = %entry
  %J0_V1_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 3
  store double %value, double* %J0_V1_gep, align 8
  ret i8 1

J1_KK2_block:                                     ; preds = %entry
  %J1_KK2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 4
  store double %value, double* %J1_KK2_gep, align 8
  ret i8 1

J1_V2_block:                                      ; preds = %entry
  %J1_V2_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 5
  store double %value, double* %J1_V2_gep, align 8
  ret i8 1

J2_KK3_block:                                     ; preds = %entry
  %J2_KK3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 6
  store double %value, double* %J2_KK3_gep, align 8
  ret i8 1

J2_k3_block:                                      ; preds = %entry
  %J2_k3_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 7
  store double %value, double* %J2_k3_gep, align 8
  ret i8 1

J3_KK4_block:                                     ; preds = %entry
  %J3_KK4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 8
  store double %value, double* %J3_KK4_gep, align 8
  ret i8 1

J3_k4_block:                                      ; preds = %entry
  %J3_k4_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 9
  store double %value, double* %J3_k4_gep, align 8
  ret i8 1

J4_KK5_block:                                     ; preds = %entry
  %J4_KK5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 10
  store double %value, double* %J4_KK5_gep, align 8
  ret i8 1

J4_V5_block:                                      ; preds = %entry
  %J4_V5_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 11
  store double %value, double* %J4_V5_gep, align 8
  ret i8 1

J5_KK6_block:                                     ; preds = %entry
  %J5_KK6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 12
  store double %value, double* %J5_KK6_gep, align 8
  ret i8 1

J5_V6_block:                                      ; preds = %entry
  %J5_V6_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 13
  store double %value, double* %J5_V6_gep, align 8
  ret i8 1

J6_KK7_block:                                     ; preds = %entry
  %J6_KK7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 14
  store double %value, double* %J6_KK7_gep, align 8
  ret i8 1

J6_k7_block:                                      ; preds = %entry
  %J6_k7_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 15
  store double %value, double* %J6_k7_gep, align 8
  ret i8 1

J7_KK8_block:                                     ; preds = %entry
  %J7_KK8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 16
  store double %value, double* %J7_KK8_gep, align 8
  ret i8 1

J7_k8_block:                                      ; preds = %entry
  %J7_k8_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 17
  store double %value, double* %J7_k8_gep, align 8
  ret i8 1

J8_KK9_block:                                     ; preds = %entry
  %J8_KK9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 18
  store double %value, double* %J8_KK9_gep, align 8
  ret i8 1

J8_V9_block:                                      ; preds = %entry
  %J8_V9_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 19
  store double %value, double* %J8_V9_gep, align 8
  ret i8 1

J9_KK10_block:                                    ; preds = %entry
  %J9_KK10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 20
  store double %value, double* %J9_KK10_gep, align 8
  ret i8 1

J9_V10_block:                                     ; preds = %entry
  %J9_V10_gep = getelementptr inbounds %rr_LLVMModelData, %rr_LLVMModelData* %modelData, i32 0, i32 37, i32 21
  store double %value, double* %J9_V10_gep, align 8
  ret i8 1
}

2024-01-24 21:49:06 Debug: removing expired model resource for hash 2ee24f4b8b4470b8a29175ba49f9f554
2024-01-24 21:49:06 Debug: could not find existing cached resource for hash 2ee24f4b8b4470b8a29175ba49f9f554, inserting new resources into cache
2024-01-24 21:49:06 Information: resetting init conditions
2024-01-24 21:49:06 Information: resetting time
2024-01-24 21:49:06 Information: resetting model type 64
2024-01-24 21:49:06 Information: resetting model type 32
2024-01-24 21:49:06 Information: resetting model type 16
2024-01-24 21:49:06 Information: resetting model type 128
2024-01-24 21:49:06 Debug: virtual void rrllvm::LLVMExecutableModel::reset(int)LLVMModelData:
size: 768
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]


2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]

LLVMModelData:
size: 768
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: creating CVODEIntegrator
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]

LLVMModelData:
size: 768
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]

LLVMModelData:
size: 768
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]

LLVMModelData:
size: 768
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), stateVector: null, returning 8
2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]

LLVMModelData:
size: 768
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: using stiff integrator
2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Information: resetting time
2024-01-24 21:49:06 Information: resetting model type 32
2024-01-24 21:49:06 Debug: virtual void rrllvm::LLVMExecutableModel::reset(int)LLVMModelData:
size: 768
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]


2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]

LLVMModelData:
size: 768
flags: 0
time: -inf
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]


2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]

LLVMModelData:
size: 768
flags: 0
time: 0.00000000
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]


2024-01-24 21:49:06 Trace: virtual int rrllvm::LLVMExecutableModel::getStateVector(double*),  out stateVector: [90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]

virtual int rrllvm::LLVMExecutableModel::getStateVector(double*), Model: 
LLVMExecutableModel
* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
CompartmentInitVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]

LLVMModelData:
size: 768
flags: 0
time: 0.00000000
numIndFloatingSpecies: 8
numIndGlobalParameters: 22
globalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
numReactions: 10
reactionRates: 
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
numRateRules: 0
rateRuleValues: 
[]
floatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numIndBoundarySpecies: 0
boundarySpeciesAmounts:
[]
numIndCompartments: 1
compartmentVolumes:
[1.00000000]
stoichiometry:
csr_matrix
rows: 8, columns: 10, non-zero entries: 20
[[  -1.00,    1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,   -1.00,    0.00,    0.00,    1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    1.00,   -1.00,    0.00,    0.00,    0.00,    0.00,    0.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,   -1.00,    0.00,    0.00,    1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    1.00,   -1.00]
 [   0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    0.00,    1.00,   -1.00,    0.00]]
numInitFloatingSpecies: 8
initFloatingSpeciesAmounts: 
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
numInitBoundarySpecies: 0
initBoundarySpeciesAmounts: 
[]
numInitCompartments: 1
initCompartmentVolumes:
[1.00000000]
numInitGlobalParameters: 22
initGlobalParameters: 
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]

* Calculated Values *
FloatingSpeciesAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitAmounts:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
FloatingSpeciesInitConcentrations:
[90.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000, 280.00000000, 10.00000000, 10.00000000]
Reaction Rates:
[1.06578947, 0.13888889, 0.23728814, 0.10000000, 0.30000000, 0.30000000, 0.23728814, 0.10000000, 0.20000000, 0.20000000]
BoundarySpeciesAmounts:
[]
BoundarySpeciesConcentrations:
[]
BoundarySpeciesInitAmounts:
[]
BoundarySpeciesInitConcentrations:
[]
CompartmentVolumes:
[1.00000000]
InitCompartmentVolumes:
[1.00000000]
GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Init GlobalParameters:
[10.00000000, 1.00000000, 9.00000000, 2.50000000, 8.00000000, 0.25000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.75000000, 15.00000000, 0.75000000, 15.00000000, 0.02500000, 15.00000000, 0.02500000, 15.00000000, 0.50000000, 15.00000000, 0.50000000]
Events Trigger Status:
[]


2024-01-24 21:49:06 Information: Tolerances used: abs=[
2024-01-24 21:49:06 Information: 9e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 2.8e-10
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: , 
2024-01-24 21:49:06 Information: 1e-11
2024-01-24 21:49:06 Information: ]; rel=1e-06

2024-01-24 21:49:06 Debug: The following is selected:
2024-01-24 21:49:06 Debug: A Selection Record --
Index: -1
p1: time
p2: 
SelectionType: 1

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 0
p1: MKKK
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 1
p1: MKKK_P
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 2
p1: MKK
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 3
p1: MKK_P
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 4
p1: MKK_PP
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 5
p1: MAPK
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 6
p1: MAPK_P
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: A Selection Record --
Index: 7
p1: MAPK_PP
p2: 
SelectionType: 787490

2024-01-24 21:49:06 Debug: Created default TimeCourse selection list.
2024-01-24 21:49:06 Debug: Created default SteadyState selection list.
2024-01-24 21:49:06 Trace: DictionaryHolder::~DictionaryHolder(), deleting dictionary 0
2024-01-24 21:49:06 Debug: rr::RoadRunnerImpl::~RoadRunnerImpl(), global instance count: 2
2024-01-24 21:49:06 Debug: virtual rrllvm::LLVMExecutableModel::~LLVMExecutableModel()
2024-01-24 21:49:06 Debug: rrllvm::ModelResources::~ModelResources()
2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

2024-01-24 21:50:22 Debug: void rr::NamedArrayObject_dealloc(rr::NamedArrayObject*)
2024-01-24 21:50:22 Warning: Remember you have commented out decrementing row/colnames
2024-01-24 21:50:22 Debug: Done

